{
  "title": "With Release, Noteable Increases Collaboration and Velocity While Cutting Downtime by 50%",
  "logo": "/case-study-images/c7e0fe6523d616fedbf4aa86deedb856.svg",
  "description": "Noteable is a collaborative notebook platform that enables teams to use and visualize data, together.",
  "publishDate": "2024-02-29T22:13:29.000Z",
  "thumbnail": "/case-study-images/3604ac35f8024f1f78daf543ef9be000.png",
  "body": {
    "raw": "\n#### About the client\n\nNoteable is a collaborative notebook platform that enables teams to use and visualize data, together. Its cloud-based and secure deployment options, no-code visualizations, and collaborative environment make it easy for teams to work with data in a single platform. Users can comment on, export, and share data points through a modern UI with native SQL support. Historically, different teams had different skill sets and used specialized tools that weren’t tightly integrated with one another. Too many handoffs led to unverifiable or unreproducible work, and the workflow process became prone to failure. Now, with Noteable, teams remain fully integrated in existing programming environments, while creating rich visualizations to share. All without code.\n\n#### Technologies used\n\n- Preview environments to empower non-traditional users to work with data in new ways.\n\n#### Problem\n\nNoteable is focused on improving collaboration and data visualization techniques by adding features to virtual notebook environments such as versioning, commenting, real-time updates and role-based access control. Advanced visualization capabilities enable Noteable’s customers to automatically visualize their data in sophisticated new ways, and to explore their data before writing any code.\n\nThis is crucial, as IDC found that [data experts worldwide spend 44 percent of their workdays on unsuccessful data activities](https://www.alteryx.com/resources/report/idc-state-of-data-science-and-analytics). A staggering [90 percent](https://venturebeat.com/2021/11/16/noteable-expands-analytics-tools-for-programming-with-new-21m/) of time is spent searching for, preparing, and analyzing data – essential housekeeping tasks, which ultimately don’t add any meaningful value at all.\n\nSo Noteable developed a suite of integrated collaboration tools to simplify communication and encourage exploration across teams, including commenting, version control and auto save. Additional features – including managed cloud infrastructure, integrated single sign-on, and role-based access control – act as a secure foundation.\n\nDesigning and augmenting these types of rich feature sets, however, required Noteable developers to rapidly test their own code changes. Pull requests were taking too long, and they needed to streamline their entire code review and developer collaboration processes.  Noteable needed faster feedback loops, and environments where they could quickly preview their code changes. Ephemeral environments through Release fit their requirements perfectly.\n\n#### How was this solved before\n\nDiego Rodriguez, staff devOps engineer tech lead at Noteable, had tried building custom environments during his time at prior companies. He knew the DIY approach relied heavily on pull requests and interconnected tools to browse and manage code. This required a lot of cobbled together infrastructure, as well as writing customized scripts. It resulted in a situation where different teams were working on different aspects of the platform simultaneously. Developers made changes in isolated environments and couldn’t easily determine the full impact of code changes until everything was merged together. And with many code changes in flight at the same time, it became increasingly difficult to identify and fix errors.\n\nIn his words: “At Noteable, we didn't have anything before Release - but because of my previous experience, we set forth to look for a vendor and not build something by ourselves.”\n\n#### A new solution\n\nBy turning to Release, the developers at Noteable now review their full stack and all the supporting infrastructure at the click of a button. Noteable also has immediate access to on-demand ephemeral environments, where they can spin up and delete environments on the fly, easily preview all code changes and run end-to-end tests in a fully fleshed out environment – before they get merged into the main branch on the source code repository.\n\n‍  \nThe resulting impact Noteable has experienced is significant. Noteable estimates the time saved with Release compared to building custom environments is at least a full quarter worth of development work across two devops engineers, not accounting for the operational burden of maintaining a custom solution. With Release, they’re able to push a change to GitHub and instantly visualize the code change, which accelerates development and product releases. Additionally, running end-to-end tests in a fully fleshed out environment allows faster iteration, and collaboration is greatly improved as developers can access environments from a central, shared location. Finally, developers at Noteable don’t need to worry about maintaining any tooling or added infrastructure.\n\n#### What’s next\n\nNoteable currently uses Release ephemeral environments with the frontend stack, and they  plan to also deploy ephemeral environments for the backend stack. Doing so will alleviate local development complexities due to the varied supporting infrastructure systems that are in use and give the backend team more time to focus on development.\n\n#### A word from the client\n\n> All pull requests require review, which became a substantial time investment and ultimately a blocking step for us. During code review, even the best developers may not understand what they’re looking at initially. Having ephemeral environments to bring up on-demand, and play with while looking at the code – rather than having to stop work, pull everything down, integrate new code changes into the main project repository, and fire it up again – reduces our time by 50 percent.\n\n###### Krishna Rajendran\n\n<CaseStudyCTA />\n",
    "code": "var Component=(()=>{var h=Object.create;var i=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var g=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),b=(t,e)=>{for(var a in e)i(t,a,{get:e[a],enumerable:!0})},s=(t,e,a,r)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of m(e))!f.call(t,o)&&o!==a&&i(t,o,{get:()=>e[o],enumerable:!(r=u(e,o))||r.enumerable});return t};var w=(t,e,a)=>(a=t!=null?h(p(t)):{},s(e||!t||!t.__esModule?i(a,\"default\",{value:t,enumerable:!0}):a,t)),v=t=>s(i({},\"__esModule\",{value:!0}),t);var d=g((j,l)=>{l.exports=_jsx_runtime});var q={};b(q,{default:()=>N,frontmatter:()=>y});var n=w(d()),y={title:\"With Release, Noteable Increases Collaboration and Velocity While Cutting Downtime by 50%\",description:\"Noteable is a collaborative notebook platform that enables teams to use and visualize data, together.\",publishDate:\"2024-02-29T22:13:29.000Z\",logo:\"/case-study-images/c7e0fe6523d616fedbf4aa86deedb856.svg\",thumbnail:\"/case-study-images/3604ac35f8024f1f78daf543ef9be000.png\"};function c(t){let e=Object.assign({h4:\"h4\",a:\"a\",span:\"span\",p:\"p\",ul:\"ul\",li:\"li\",br:\"br\",blockquote:\"blockquote\",h6:\"h6\"},t.components),{CaseStudyCTA:a}=e;return a||x(\"CaseStudyCTA\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.h4,{id:\"about-the-client\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#about-the-client\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"About the client\"]}),`\n`,(0,n.jsx)(e.p,{children:\"Noteable is a collaborative notebook platform that enables teams to use and visualize data, together. Its cloud-based and secure deployment options, no-code visualizations, and collaborative environment make it easy for teams to work with data in a single platform. Users can comment on, export, and share data points through a modern UI with native SQL support. Historically, different teams had different skill sets and used specialized tools that weren\\u2019t tightly integrated with one another. Too many handoffs led to unverifiable or unreproducible work, and the workflow process became prone to failure. Now, with Noteable, teams remain fully integrated in existing programming environments, while creating rich visualizations to share. All without code.\"}),`\n`,(0,n.jsxs)(e.h4,{id:\"technologies-used\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#technologies-used\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Technologies used\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"Preview environments to empower non-traditional users to work with data in new ways.\"}),`\n`]}),`\n`,(0,n.jsxs)(e.h4,{id:\"problem\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#problem\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Problem\"]}),`\n`,(0,n.jsx)(e.p,{children:\"Noteable is focused on improving collaboration and data visualization techniques by adding features to virtual notebook environments such as versioning, commenting, real-time updates and role-based access control. Advanced visualization capabilities enable Noteable\\u2019s customers to automatically visualize their data in sophisticated new ways, and to explore their data before writing any code.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"This is crucial, as IDC found that \",(0,n.jsx)(e.a,{href:\"https://www.alteryx.com/resources/report/idc-state-of-data-science-and-analytics\",children:\"data experts worldwide spend 44 percent of their workdays on unsuccessful data activities\"}),\". A staggering \",(0,n.jsx)(e.a,{href:\"https://venturebeat.com/2021/11/16/noteable-expands-analytics-tools-for-programming-with-new-21m/\",children:\"90 percent\"}),\" of time is spent searching for, preparing, and analyzing data \\u2013 essential housekeeping tasks, which ultimately don\\u2019t add any meaningful value at all.\"]}),`\n`,(0,n.jsx)(e.p,{children:\"So Noteable developed a suite of integrated collaboration tools to simplify communication and encourage exploration across teams, including commenting, version control and auto save. Additional features \\u2013 including managed cloud infrastructure, integrated single sign-on, and role-based access control \\u2013 act as a secure foundation.\"}),`\n`,(0,n.jsx)(e.p,{children:\"Designing and augmenting these types of rich feature sets, however, required Noteable developers to rapidly test their own code changes. Pull requests were taking too long, and they needed to streamline their entire code review and developer collaboration processes. \\xA0Noteable needed faster feedback loops, and environments where they could quickly preview their code changes. Ephemeral environments through Release fit their requirements perfectly.\"}),`\n`,(0,n.jsxs)(e.h4,{id:\"how-was-this-solved-before\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#how-was-this-solved-before\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"How was this solved before\"]}),`\n`,(0,n.jsx)(e.p,{children:\"Diego Rodriguez, staff devOps engineer tech lead at Noteable, had tried building custom environments during his time at prior companies. He knew the DIY approach relied heavily on pull requests and interconnected tools to browse and manage code. This required a lot of cobbled together infrastructure, as well as writing customized scripts. It resulted in a situation where different teams were working on different aspects of the platform simultaneously. Developers made changes in isolated environments and couldn\\u2019t easily determine the full impact of code changes until everything was merged together. And with many code changes in flight at the same time, it became increasingly difficult to identify and fix errors.\"}),`\n`,(0,n.jsx)(e.p,{children:\"In his words: \\u201CAt Noteable, we didn't have anything before Release - but because of my previous experience, we set forth to look for a vendor and not build something by ourselves.\\u201D\"}),`\n`,(0,n.jsxs)(e.h4,{id:\"a-new-solution\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#a-new-solution\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"A new solution\"]}),`\n`,(0,n.jsx)(e.p,{children:\"By turning to Release, the developers at Noteable now review their full stack and all the supporting infrastructure at the click of a button. Noteable also has immediate access to on-demand ephemeral environments, where they can spin up and delete environments on the fly, easily preview all code changes and run end-to-end tests in a fully fleshed out environment \\u2013 before they get merged into the main branch on the source code repository.\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"\\u200D\",(0,n.jsx)(e.br,{}),`\n`,\"The resulting impact Noteable has experienced is significant. Noteable estimates the time saved with Release compared to building custom environments is at least a full quarter worth of development work across two devops engineers, not accounting for the operational burden of maintaining a custom solution. With Release, they\\u2019re able to push a change to GitHub and instantly visualize the code change, which accelerates development and product releases. Additionally, running end-to-end tests in a fully fleshed out environment allows faster iteration, and collaboration is greatly improved as developers can access environments from a central, shared location. Finally, developers at Noteable don\\u2019t need to worry about maintaining any tooling or added infrastructure.\"]}),`\n`,(0,n.jsxs)(e.h4,{id:\"whats-next\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#whats-next\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"What\\u2019s next\"]}),`\n`,(0,n.jsx)(e.p,{children:\"Noteable currently uses Release ephemeral environments with the frontend stack, and they \\xA0plan to also deploy ephemeral environments for the backend stack. Doing so will alleviate local development complexities due to the varied supporting infrastructure systems that are in use and give the backend team more time to focus on development.\"}),`\n`,(0,n.jsxs)(e.h4,{id:\"a-word-from-the-client\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#a-word-from-the-client\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"A word from the client\"]}),`\n`,(0,n.jsxs)(e.blockquote,{children:[`\n`,(0,n.jsx)(e.p,{children:\"All pull requests require review, which became a substantial time investment and ultimately a blocking step for us. During code review, even the best developers may not understand what they\\u2019re looking at initially. Having ephemeral environments to bring up on-demand, and play with while looking at the code \\u2013 rather than having to stop work, pull everything down, integrate new code changes into the main project repository, and fire it up again \\u2013 reduces our time by 50 percent.\"}),`\n`]}),`\n`,(0,n.jsxs)(e.h6,{id:\"krishna-rajendran\",children:[(0,n.jsx)(e.a,{className:\"anchor\",href:\"#krishna-rajendran\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Krishna Rajendran\"]}),`\n`,(0,n.jsx)(a,{})]})}function k(t={}){let{wrapper:e}=t.components||{};return e?(0,n.jsx)(e,Object.assign({},t,{children:(0,n.jsx)(c,t)})):c(t)}var N=k;function x(t,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+t+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return v(q);})();\n;return Component;"
  },
  "_id": "case-studies/content/noteable.mdx",
  "_raw": {
    "sourceFilePath": "case-studies/content/noteable.mdx",
    "sourceFileName": "noteable.mdx",
    "sourceFileDir": "case-studies/content",
    "contentType": "mdx",
    "flattenedPath": "case-studies/content/noteable"
  },
  "type": "CaseStudy",
  "computedSlug": "noteable"
}