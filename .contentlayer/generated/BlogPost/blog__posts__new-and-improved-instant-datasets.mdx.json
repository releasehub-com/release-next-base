{
  "title": "New and Improved Instant Datasets 2.0",
  "summary": "Our most popular feature gets an upgrade. Now it's even easier to build and test with production-like data.",
  "publishDate": "Tue Jul 11 2023 20:19:22 GMT+0000 (Coordinated Universal Time)",
  "author": "erik-landerholm",
  "readingTime": 5,
  "categories": [
    "platform-engineering",
    "product"
  ],
  "mainImage": "/blog-images/9caeec0a356eac449e6eef994c90f2d1.jpg",
  "imageAlt": "New and Improved Instant Datasets 2.0",
  "showCTA": true,
  "ctaCopy": "For instant access to production-like data in your ephemeral environments, try Release's environment management platform today.",
  "ctaLink": "https://release.com/signup?utm_source=blog&utm_medium=cta&utm_campaign=blog-cta&utm_content=new-and-improved-instant-datasets",
  "relatedPosts": [
    "12-things-you-didnt-know-you-could-do-with-release-part-1"
  ],
  "ogImage": "/blog-images/9caeec0a356eac449e6eef994c90f2d1.jpg",
  "excerpt": "Our most popular feature gets an upgrade. Now it's even easier to build and test with production-like data.",
  "tags": [
    "platform-engineering",
    "product"
  ],
  "ctaButton": "Try Release for Free",
  "body": {
    "raw": "\nI don’t know about you, but for me the most frustrating thing about local development, remote development, basically any kind of development is getting access to production or production-like data. Getting data, modifying data, securing data, and removing data when finished, these are some of the hardest things about dealing with multiple environments. And almost any sufficiently complicated feature development can benefit from real data. Ephemeral environments are great for developing and testing complicated features, solving race conditions, etc, but none of that is possible without something that gives you instant access to production-like data.\n\nWe created Instant Datasets to allow you to get access to production-like data for your ephemeral environments, instantly.  If you are an existing Release user, you know that Instant Datasets capability has been part of Release from the very beginning and is one of the most popular features of the platform. As such, we are constantly thinking about ways to make it faster, better, and more useful to all developers. Our most recent set of improvements include an architectural overhaul, addition of a new key functionality – a native data obfuscation integration, and (soon) the ability to use Instant Datasets as a stand-alone product, launching July 25th.\n\n### What’s New?\n\nUnder the hood Instant Datasets 1.0 consisted of a homegrown workflow engine, a few state machines and background job processing. This has served us well, but when we decided to improve our data cleansing options, we knew we needed to use a real workflow engine.\n\nBefore, you needed to clean your production data during the deployment process. This greatly increased the time of deployment and was incumbent on our customer to manage this process. The new architecture allows us to simplify the process and add integrations our customers wanted.\n\nWe had great experiences implementing [Temporal](https://github.com/temporalio/temporal) for internal workflows and knew it would also serve us well in this application. Temporal gives us the scalability, durability, performance and extensibility we need to create our world class platform. At the moment, working with Temporal and Ruby/Rails is not a trivial exercise and we faced a number of interesting challenges making it work. But overall it was the right choice for this task. (Keep your eyes open for a deeper dive into how we use Temporal at Release!)\n\nNow, this new architecture gives us the tools to build a workflow that allows our customers to plug in ANY data obfuscation tool as a custom task. To make it even simpler for our users, we created a native integration with [Tonic.ai](http://tonic.ai/) to quickly build an obfuscated dataset and easily use it with your environments. Here is how the Tonic integration works:\n\n![](/blog-images/9b9c951a1aa3dc01dde04a001cb18cc0.png)\n\n_Tonic and Release instant dataset creation workflows._\n\nAll configurations are done in one simple UI in Release. You select your RDS snapshot. Release creates source and destination databases to be processed in Tonic. You provide your Tonic api and workspace ids and Tonic does its magic. Once finished, you get a pool of obfuscated, cleaned, truncated and otherwise modified databases instantly available for all your environments!\n\n![](/blog-images/2033fb58c0704aac9a6081f68f8f3a7e.png)\n\n_Select the source snapshot and configure Tonic all in one simple UI_\n\nTo learn more about the Tonic integration, see the docs [here](https://docs.release.com/reference-documentation/instant-dataset-tasks/tonic-cloud). For more information on Instant Datasets in Release check out our documentation on AWS [here](https://docs.release.com/reference-documentation/instant-datasets-aws) and GCP [here](https://docs.release.com/reference-documentation/instant-datasets-gcp).\n\n_\\*At the time of this post, we have not finished migrating all of our dataset integrations from our Instant Datasets 1.0 architecture to 2.0. For now, the ability to cleanse your data is limited to AWS (RDS and Aurora), but we are actively working on our GCP support and it will be available shortly\\*_  \n\n### What’s Next?\n\nWith our new architecture in hand we have a lot of new functionality to add to Instant Datasets in the coming weeks:\n\n- **Add GCP support on our new architecture.**  At the moment we only support our Tonic integration and new architecture when using AWS databases, both RDS and Aurora are supported. We have support for [CloudSql](https://cloud.google.com/sql) in our Instant Datasets 1.0 and will have that same functionality plus the Tonic integration very soon.\n- **Bring your own obfuscation tool!** Tonic is great, we use it, but if you have other tools or just scripts in a container you would like to run when creating your Instant Dataset we will have support for that in the next couple of weeks also.\n- **More Integrations!** Instant Datasets are useful beyond your traditional databases.  Any set of data that can be cloned or used to create an example can be used by Release to create an Instant Dataset for your environments. We will be adding support for MongoDB Atlas, Neon Serverless, and more in the near future!\n- **Stand-alone Instant Datasets** soon available to all developers, regardless if they already use the Release platform or not. We believe that production-like data is the best kind of data to develop and test with, so we are making Instant Datasets available to everyone, at no cost. [Sign up to be the first to know when stand-alone Instant Datasets launches on July 25th.](https://www2.release.com/instant-datasets)\n\n### What’s in it for you?\n\nTesting and developing with production-like data has always been our default at Release. It allows us to prevent rework, makes potential bugs apparent much sooner, and gives us a realistic preview of how our app will behave under actual loads. We want to share those benefits with the wider developer community and continue adding useful functionality to our platform. Take the new and improved Instant Datasets for a spin and [let us know](mailto:hello@release.com) what you think (and what we should add next).\n",
    "code": "var Component=(()=>{var u=Object.create;var i=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var f=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),w=(a,e)=>{for(var n in e)i(a,n,{get:e[n],enumerable:!0})},r=(a,e,n,s)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of p(e))!g.call(a,o)&&o!==n&&i(a,o,{get:()=>e[o],enumerable:!(s=h(e,o))||s.enumerable});return a};var y=(a,e,n)=>(n=a!=null?u(m(a)):{},r(e||!a||!a.__esModule?i(n,\"default\",{value:a,enumerable:!0}):n,a)),b=a=>r(i({},\"__esModule\",{value:!0}),a);var d=f((x,l)=>{l.exports=_jsx_runtime});var I={};w(I,{default:()=>T,frontmatter:()=>v});var t=y(d()),v={title:\"New and Improved Instant Datasets 2.0\",summary:\"Our most popular feature gets an upgrade. Now it's even easier to build and test with production-like data.\",publishDate:\"Tue Jul 11 2023 20:19:22 GMT+0000 (Coordinated Universal Time)\",author:\"erik-landerholm\",readingTime:5,categories:[\"platform-engineering\",\"product\"],mainImage:\"/blog-images/9caeec0a356eac449e6eef994c90f2d1.jpg\",imageAlt:\"New and Improved Instant Datasets 2.0\",showCTA:!0,ctaCopy:\"For instant access to production-like data in your ephemeral environments, try Release's environment management platform today.\",ctaLink:\"https://release.com/signup?utm_source=blog&utm_medium=cta&utm_campaign=blog-cta&utm_content=new-and-improved-instant-datasets\",relatedPosts:[\"12-things-you-didnt-know-you-could-do-with-release-part-1\"],ogImage:\"/blog-images/9caeec0a356eac449e6eef994c90f2d1.jpg\",excerpt:\"Our most popular feature gets an upgrade. Now it's even easier to build and test with production-like data.\",tags:[\"platform-engineering\",\"product\"],ctaButton:\"Try Release for Free\"};function c(a){let e=Object.assign({p:\"p\",h3:\"h3\",a:\"a\",span:\"span\",img:\"img\",em:\"em\",ul:\"ul\",li:\"li\",strong:\"strong\"},a.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.p,{children:\"I don\\u2019t know about you, but for me the most frustrating thing about local development, remote development, basically any kind of development is getting access to production or production-like data. Getting data, modifying data, securing data, and removing data when finished, these are some of the hardest things about dealing with multiple environments. And almost any sufficiently complicated feature development can benefit from real data. Ephemeral environments are great for developing and testing complicated features, solving race conditions, etc, but none of that is possible without something that gives you instant access to production-like data.\"}),`\n`,(0,t.jsx)(e.p,{children:\"We created Instant Datasets to allow you to get access to production-like data for your ephemeral environments, instantly. \\xA0If you are an existing Release user, you know that Instant Datasets capability has been part of Release from the very beginning and is one of the most popular features of the platform. As such, we are constantly thinking about ways to make it faster, better, and more useful to all developers. Our most recent set of improvements include an architectural overhaul, addition of a new key functionality \\u2013 a native data obfuscation integration, and (soon) the ability to use Instant Datasets as a stand-alone product, launching July 25th.\"}),`\n`,(0,t.jsxs)(e.h3,{id:\"whats-new\",children:[(0,t.jsx)(e.a,{className:\"anchor\",href:\"#whats-new\",children:(0,t.jsx)(e.span,{className:\"icon icon-link\"})}),\"What\\u2019s New?\"]}),`\n`,(0,t.jsx)(e.p,{children:\"Under the hood Instant Datasets 1.0 consisted of a homegrown workflow engine, a few state machines and background job processing. This has served us well, but when we decided to improve our data cleansing options, we knew we needed to use a real workflow engine.\"}),`\n`,(0,t.jsx)(e.p,{children:\"Before, you needed to clean your production data during the deployment process. This greatly increased the time of deployment and was incumbent on our customer to manage this process. The new architecture allows us to simplify the process and add integrations our customers wanted.\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"We had great experiences implementing \",(0,t.jsx)(e.a,{href:\"https://github.com/temporalio/temporal\",children:\"Temporal\"}),\" for internal workflows and knew it would also serve us well in this application. Temporal gives us the scalability, durability, performance and extensibility we need to create our world class platform. At the moment, working with Temporal and Ruby/Rails is not a trivial exercise and we faced a number of interesting challenges making it work. But overall it was the right choice for this task. (Keep your eyes open for a deeper dive into how we use Temporal at Release!)\"]}),`\n`,(0,t.jsxs)(e.p,{children:[\"Now, this new architecture gives us the tools to build a workflow that allows our customers to plug in ANY data obfuscation tool as a custom task. To make it even simpler for our users, we created a native integration with \",(0,t.jsx)(e.a,{href:\"http://tonic.ai/\",children:\"Tonic.ai\"}),\" to quickly build an obfuscated dataset and easily use it with your environments. Here is how the Tonic integration works:\"]}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:\"/blog-images/9b9c951a1aa3dc01dde04a001cb18cc0.png\",alt:\"\"})}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.em,{children:\"Tonic and Release instant dataset creation workflows.\"})}),`\n`,(0,t.jsx)(e.p,{children:\"All configurations are done in one simple UI in Release. You select your RDS snapshot. Release creates source and destination databases to be processed in Tonic. You provide your Tonic api and workspace ids and Tonic does its magic. Once finished, you get a pool of obfuscated, cleaned, truncated and otherwise modified databases instantly available for all your environments!\"}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:\"/blog-images/2033fb58c0704aac9a6081f68f8f3a7e.png\",alt:\"\"})}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.em,{children:\"Select the source snapshot and configure Tonic all in one simple UI\"})}),`\n`,(0,t.jsxs)(e.p,{children:[\"To learn more about the Tonic integration, see the docs \",(0,t.jsx)(e.a,{href:\"https://docs.release.com/reference-documentation/instant-dataset-tasks/tonic-cloud\",children:\"here\"}),\". For more information on Instant Datasets in Release check out our documentation on AWS \",(0,t.jsx)(e.a,{href:\"https://docs.release.com/reference-documentation/instant-datasets-aws\",children:\"here\"}),\" and GCP \",(0,t.jsx)(e.a,{href:\"https://docs.release.com/reference-documentation/instant-datasets-gcp\",children:\"here\"}),\".\"]}),`\n`,(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.em,{children:\"*At the time of this post, we have not finished migrating all of our dataset integrations from our Instant Datasets 1.0 architecture to 2.0. For now, the ability to cleanse your data is limited to AWS (RDS and Aurora), but we are actively working on our GCP support and it will be available shortly*\"}),\" \\xA0\"]}),`\n`,(0,t.jsxs)(e.h3,{id:\"whats-next\",children:[(0,t.jsx)(e.a,{className:\"anchor\",href:\"#whats-next\",children:(0,t.jsx)(e.span,{className:\"icon icon-link\"})}),\"What\\u2019s Next?\"]}),`\n`,(0,t.jsx)(e.p,{children:\"With our new architecture in hand we have a lot of new functionality to add to Instant Datasets in the coming weeks:\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"Add GCP support on our new architecture.\"}),\" \\xA0At the moment we only support our Tonic integration and new architecture when using AWS databases, both RDS and Aurora are supported. We have support for \",(0,t.jsx)(e.a,{href:\"https://cloud.google.com/sql\",children:\"CloudSql\"}),\" in our Instant Datasets 1.0 and will have that same functionality plus the Tonic integration very soon.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"Bring your own obfuscation tool!\"}),\" Tonic is great, we use it, but if you have other tools or just scripts in a container you would like to run when creating your Instant Dataset we will have support for that in the next couple of weeks also.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"More Integrations!\"}),\" Instant Datasets are useful beyond your traditional databases. \\xA0Any set of data that can be cloned or used to create an example can be used by Release to create an Instant Dataset for your environments. We will be adding support for MongoDB Atlas, Neon Serverless, and more in the near future!\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"Stand-alone Instant Datasets\"}),\" soon available to all developers, regardless if they already use the Release platform or not. We believe that production-like data is the best kind of data to develop and test with, so we are making Instant Datasets available to everyone, at no cost. \",(0,t.jsx)(e.a,{href:\"https://www2.release.com/instant-datasets\",children:\"Sign up to be the first to know when stand-alone Instant Datasets launches on July 25th.\"})]}),`\n`]}),`\n`,(0,t.jsxs)(e.h3,{id:\"whats-in-it-for-you\",children:[(0,t.jsx)(e.a,{className:\"anchor\",href:\"#whats-in-it-for-you\",children:(0,t.jsx)(e.span,{className:\"icon icon-link\"})}),\"What\\u2019s in it for you?\"]}),`\n`,(0,t.jsxs)(e.p,{children:[\"Testing and developing with production-like data has always been our default at Release. It allows us to prevent rework, makes potential bugs apparent much sooner, and gives us a realistic preview of how our app will behave under actual loads. We want to share those benefits with the wider developer community and continue adding useful functionality to our platform. Take the new and improved Instant Datasets for a spin and \",(0,t.jsx)(e.a,{href:\"mailto:hello@release.com\",children:\"let us know\"}),\" what you think (and what we should add next).\"]})]})}function k(a={}){let{wrapper:e}=a.components||{};return e?(0,t.jsx)(e,Object.assign({},a,{children:(0,t.jsx)(c,a)})):c(a)}var T=k;return b(I);})();\n;return Component;"
  },
  "_id": "blog/posts/new-and-improved-instant-datasets.mdx",
  "_raw": {
    "sourceFilePath": "blog/posts/new-and-improved-instant-datasets.mdx",
    "sourceFileName": "new-and-improved-instant-datasets.mdx",
    "sourceFileDir": "blog/posts",
    "contentType": "mdx",
    "flattenedPath": "blog/posts/new-and-improved-instant-datasets"
  },
  "type": "BlogPost",
  "computedSlug": "new-and-improved-instant-datasets"
}