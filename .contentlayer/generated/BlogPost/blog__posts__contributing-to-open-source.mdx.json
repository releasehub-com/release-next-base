{
  "title": "Contributing To Open Source - Getting Started",
  "summary": "Contributing to open source projects can be very fulfilling, but getting started may be intimidating and confusing. Most",
  "publishDate": "Fri Jun 11 2021 03:05:52 GMT+0000 (Coordinated Universal Time)",
  "author": "vicky-koblinski",
  "readingTime": 7,
  "categories": [
    "platform-engineering",
    "product"
  ],
  "mainImage": "/blog-images/d5645b39f3265e59b32fe6a9f7a9af31.jpg",
  "imageAlt": "Group of friends hugging each other conveying the idea of community",
  "showCTA": true,
  "ctaCopy": "Improve your open source contributions with Release's ephemeral environments for streamlined collaboration and efficient testing.",
  "ctaLink": "https://release.com/signup?utm_source=blog&utm_medium=cta&utm_campaign=blog-cta&utm_content=contributing-to-open-source",
  "relatedPosts": [
    ""
  ],
  "ogImage": "/blog-images/d5645b39f3265e59b32fe6a9f7a9af31.jpg",
  "excerpt": "Contributing to open source projects can be very fulfilling, but getting started may be intimidating and confusing. Most",
  "tags": [
    "platform-engineering",
    "product"
  ],
  "ctaButton": "Try Release for Free",
  "body": {
    "raw": "\nContributing to open source projects can be very fulfilling, but getting started may be intimidating and confusing. Most large open source projects have steep learning curves which can be off-putting for the first-time contributor. However, there are a lot of opportunities to get started and thrive, even if you’ve never contributed to an open source project before. \n\nOpen source is incredibly valuable. Where would the Linux kernel be without the 13,500 developers and 1,300 companies that have contributed since 2005? And what of the thousands of projects built on its back?\n\nThese days, every project you start is built using packages and building blocks from those who came before you. You can stand on the shoulders of giants. The wheel has already been invented, and it’s more reliable and battle-tested than anything you could build in-house. Open source software has been essential for developers, companies, and, ideally, consumers.\n\nHowever, there would be no giants, no blocks, no wheels without communities, contributors, and passionate people to drive these projects forward. These are ordinary people doing extraordinary things. \n\nAlthough the main objective of open source is to create accessible and valuable software for everyone to build off of, contributors can find a plethora of personal benefits from contributing. You will sharpen your technical skills, nurture your interpersonal communication skills, and practice giving and receiving feedback. \n\n### The Culture\n\nOkay, so you’ve decided you want to become a contributor but you’re not convinced that you’ve got what it takes. You’re feeling quite intimidated actually. That’s okay. You’ve never done this before. Every contributor has had a first contribution and open source projects tend to culture empathy, patience, and understanding.\n\nIn my experience, successful open source projects have maintainers and communities that are the friendliest on the planet. They are excited and enthusiastic about someone wanting to contribute. Often they’ll be active on Twitter, Slack, Discord, and/or another platform that you can join and speak directly with the maintainers and other contributors. Many large open source communities even have their own community guidelines that boil down to “Don’t be a jerk”. These communities welcome new contributors with open arms.\n\n### Finding the Right Fit\n\nOne of the best ways to find an open source project to work on is to look to open source software that you already use. Tools, packages, frameworks, or languages that you work with regularly and enjoy using could be great candidates. To find out if the project is open source, check its license and if it accepts contributions. It’s also important to check that the project is actively maintained. Are the pull-requests sitting dormant or are the maintainers providing feedback? Are the issues getting acknowledged or are they sitting there stale?\n\nIf that approach doesn’t work for you, try using GitHub to explore. I recommend starting your contribution journey with languages and frameworks that you’re familiar with. It’ll be difficult enough to get up to speed on the codebase, but if you’re already familiar with a framework’s best practices and typical layout, you’ll have a more successful time hitting the ground running.\n\nGitHub has excellent search capabilities to find open source projects that are actively seeking out new contributors. By searching for the right tags and filtering by languages you know best, you can quickly find new issues that beg for assistance. Some great tags to search for are:\n\n- [contributions-welcome](https://github.com/topics/contributions-welcome)\n- [good-first-issue](https://github.com/topics/good-first-issue)\n- [hacktoberfest](https://github.com/topics/hacktoberfest)\n- [beginner-friendly](https://github.com/topics/beginner-friendly)\n- good-first-bug\n- [easy](https://github.com/topics/easy)\n- [low-hanging-fruit](https://github.com/topics/low-hanging-fruit)\n- [first-timers-only](https://github.com/topics/first-timers-only)\n\nGitHub also suggests projects you may like based on the people and repositories that you have starred, follow, or watch. \n\n### Your First Contribution\n\nOnce you find an issue that you feel confident in tackling in an active project that has a culture you feel comfortable in, it’s time to get your hands dirty! The first thing you will want to do is to “claim” the ticket. It’s a bad idea to run off and solve the problem without communicating your intentions to the maintainers. Instead, reply to the ticket in question by volunteering yourself for the task. This allows the maintainers and other contributors to know this ticket is being actively worked on and the maintainers may have requests, suggestions, or guidance to help solve the problem.\n\nStart small. Pick tickets that are easy and have the smallest contribution and code changes when you first start. Not only will this enable you to slowly get familiar with the codebase, but it will also build your confidence and credibility before you try taking on harder tasks. \n\nAfter you have picked up a ticket and think you have finished it, do your research before you open your first pull-request. Carefully read the documentation, code, and discussions related to this ticket to get the best understanding of how to handle the problem. If you’re stuck, reach out to the community and ask for guidance, clarification, or mentorship. \n\nOnce you feel confident that you’ve solved the problem, it’s time to submit a PR. Look in the project for a **CONTRIBUTORS.md** file--most open source projects on GitHub will likely have this within their project. This file will contain instructions on how this project would like PRs to be submitted by contributors. They may request strict branch naming conventions, PR titles, documentation or tests, comments, or other things in pull-requests. GitHub also has a [great checklist](https://opensource.guide/how-to-contribute/#a-checklist-before-you-contribute) on what to check for before you open your pull-request. \n\nCreate the PR and follow the PR template if the project has one. Be sure to link back to the original ticket. The maintainer may request changes or want to have a discussion about your changes. It’s normal to have a back-and-forth before a PR is accepted. Work with the maintainer until your PR is ready to be accepted.\n\nOnce your PR passes the maintainer’s review, they will merge your code in.   \n**Congratulations!** You’re an open source contributor!!\n\n### Are You An Open Source Project Maintainer? Release Wants To Support You!\n\nOpen source projects benefit dramatically from Ephemeral Environments on every pull-request. We love open source and are dedicated to giving back. [Contact us](https://share.hsforms.com/1YM0zqIgsTc2aD2oPDQUQJA4shs5) to find out how we can help fuel your rocket through preview environments and help put confidence in contributor’s PRs.\n",
    "code": "var Component=(()=>{var h=Object.create;var r=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var m=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),b=(n,e)=>{for(var o in e)r(n,o,{get:e[o],enumerable:!0})},s=(n,e,o,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of p(e))!f.call(n,i)&&i!==o&&r(n,i,{get:()=>e[i],enumerable:!(a=d(e,i))||a.enumerable});return n};var y=(n,e,o)=>(o=n!=null?h(g(n)):{},s(e||!n||!n.__esModule?r(o,\"default\",{value:n,enumerable:!0}):o,n)),w=n=>s(r({},\"__esModule\",{value:!0}),n);var u=m((C,c)=>{c.exports=_jsx_runtime});var T={};b(T,{default:()=>j,frontmatter:()=>k});var t=y(u()),k={title:\"Contributing To Open Source - Getting Started\",summary:\"Contributing to open source projects can be very fulfilling, but getting started may be intimidating and confusing. Most\",publishDate:\"Fri Jun 11 2021 03:05:52 GMT+0000 (Coordinated Universal Time)\",author:\"vicky-koblinski\",readingTime:7,categories:[\"platform-engineering\",\"product\"],mainImage:\"/blog-images/d5645b39f3265e59b32fe6a9f7a9af31.jpg\",imageAlt:\"Group of friends hugging each other conveying the idea of community\",showCTA:!0,ctaCopy:\"Improve your open source contributions with Release's ephemeral environments for streamlined collaboration and efficient testing.\",ctaLink:\"https://release.com/signup?utm_source=blog&utm_medium=cta&utm_campaign=blog-cta&utm_content=contributing-to-open-source\",relatedPosts:[\"\"],ogImage:\"/blog-images/d5645b39f3265e59b32fe6a9f7a9af31.jpg\",excerpt:\"Contributing to open source projects can be very fulfilling, but getting started may be intimidating and confusing. Most\",tags:[\"platform-engineering\",\"product\"],ctaButton:\"Try Release for Free\"};function l(n){let e=Object.assign({p:\"p\",h3:\"h3\",a:\"a\",span:\"span\",ul:\"ul\",li:\"li\",strong:\"strong\",br:\"br\"},n.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.p,{children:\"Contributing to open source projects can be very fulfilling, but getting started may be intimidating and confusing. Most large open source projects have steep learning curves which can be off-putting for the first-time contributor. However, there are a lot of opportunities to get started and thrive, even if you\\u2019ve never contributed to an open source project before.\\xA0\"}),`\n`,(0,t.jsx)(e.p,{children:\"Open source is incredibly valuable. Where would the Linux kernel be without the 13,500 developers and 1,300 companies that have contributed since 2005? And what of the thousands of projects built on its back?\"}),`\n`,(0,t.jsx)(e.p,{children:\"These days, every project you start is built using packages and building blocks from those who came before you. You can stand on the shoulders of giants. The wheel has already been invented, and it\\u2019s more reliable and battle-tested than anything you could build in-house. Open source software has been essential for developers, companies, and, ideally, consumers.\"}),`\n`,(0,t.jsx)(e.p,{children:\"However, there would be no giants, no blocks, no wheels without communities, contributors, and passionate people to drive these projects forward. These are ordinary people doing extraordinary things.\\xA0\"}),`\n`,(0,t.jsx)(e.p,{children:\"Although the main objective of open source is to create accessible and valuable software for everyone to build off of, contributors can find a plethora of personal benefits from contributing. You will sharpen your technical skills, nurture your interpersonal communication skills, and practice giving and receiving feedback.\\xA0\"}),`\n`,(0,t.jsxs)(e.h3,{id:\"the-culture\",children:[(0,t.jsx)(e.a,{className:\"anchor\",href:\"#the-culture\",children:(0,t.jsx)(e.span,{className:\"icon icon-link\"})}),\"The Culture\"]}),`\n`,(0,t.jsx)(e.p,{children:\"Okay, so you\\u2019ve decided you want to become a contributor but you\\u2019re not convinced that you\\u2019ve got what it takes. You\\u2019re feeling quite intimidated actually. That\\u2019s okay. You\\u2019ve never done this before. Every contributor has had a first contribution and open source projects tend to culture empathy, patience, and understanding.\"}),`\n`,(0,t.jsx)(e.p,{children:\"In my experience, successful open source projects have maintainers and communities that are the friendliest on the planet. They are excited and enthusiastic about someone wanting to contribute. Often they\\u2019ll be active on Twitter, Slack, Discord, and/or another platform that you can join and speak directly with the maintainers and other contributors. Many large open source communities even have their own community guidelines that boil down to \\u201CDon\\u2019t be a jerk\\u201D. These communities welcome new contributors with open arms.\"}),`\n`,(0,t.jsxs)(e.h3,{id:\"finding-the-right-fit\",children:[(0,t.jsx)(e.a,{className:\"anchor\",href:\"#finding-the-right-fit\",children:(0,t.jsx)(e.span,{className:\"icon icon-link\"})}),\"Finding the Right Fit\"]}),`\n`,(0,t.jsx)(e.p,{children:\"One of the best ways to find an open source project to work on is to look to open source software that you already use. Tools, packages, frameworks, or languages that you work with regularly and enjoy using could be great candidates. To find out if the project is open source, check its license and if it accepts contributions. It\\u2019s also important to check that the project is actively maintained. Are the pull-requests sitting dormant or are the maintainers providing feedback? Are the issues getting acknowledged or are they sitting there stale?\"}),`\n`,(0,t.jsx)(e.p,{children:\"If that approach doesn\\u2019t work for you, try using GitHub to explore. I recommend starting your contribution journey with languages and frameworks that you\\u2019re familiar with. It\\u2019ll be difficult enough to get up to speed on the codebase, but if you\\u2019re already familiar with a framework\\u2019s best practices and typical layout, you\\u2019ll have a more successful time hitting the ground running.\"}),`\n`,(0,t.jsx)(e.p,{children:\"GitHub has excellent search capabilities to find open source projects that are actively seeking out new contributors. By searching for the right tags and filtering by languages you know best, you can quickly find new issues that beg for assistance. Some great tags to search for are:\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://github.com/topics/contributions-welcome\",children:\"contributions-welcome\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://github.com/topics/good-first-issue\",children:\"good-first-issue\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://github.com/topics/hacktoberfest\",children:\"hacktoberfest\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://github.com/topics/beginner-friendly\",children:\"beginner-friendly\"})}),`\n`,(0,t.jsx)(e.li,{children:\"good-first-bug\"}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://github.com/topics/easy\",children:\"easy\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://github.com/topics/low-hanging-fruit\",children:\"low-hanging-fruit\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:\"https://github.com/topics/first-timers-only\",children:\"first-timers-only\"})}),`\n`]}),`\n`,(0,t.jsx)(e.p,{children:\"GitHub also suggests projects you may like based on the people and repositories that you have starred, follow, or watch.\\xA0\"}),`\n`,(0,t.jsxs)(e.h3,{id:\"your-first-contribution\",children:[(0,t.jsx)(e.a,{className:\"anchor\",href:\"#your-first-contribution\",children:(0,t.jsx)(e.span,{className:\"icon icon-link\"})}),\"Your First Contribution\"]}),`\n`,(0,t.jsx)(e.p,{children:\"Once you find an issue that you feel confident in tackling in an active project that has a culture you feel comfortable in, it\\u2019s time to get your hands dirty! The first thing you will want to do is to \\u201Cclaim\\u201D the ticket. It\\u2019s a bad idea to run off and solve the problem without communicating your intentions to the maintainers. Instead, reply to the ticket in question by volunteering yourself for the task. This allows the maintainers and other contributors to know this ticket is being actively worked on and the maintainers may have requests, suggestions, or guidance to help solve the problem.\"}),`\n`,(0,t.jsx)(e.p,{children:\"Start small. Pick tickets that are easy and have the smallest contribution and code changes when you first start. Not only will this enable you to slowly get familiar with the codebase, but it will also build your confidence and credibility before you try taking on harder tasks.\\xA0\"}),`\n`,(0,t.jsx)(e.p,{children:\"After you have picked up a ticket and think you have finished it, do your research before you open your first pull-request. Carefully read the documentation, code, and discussions related to this ticket to get the best understanding of how to handle the problem. If you\\u2019re stuck, reach out to the community and ask for guidance, clarification, or mentorship.\\xA0\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Once you feel confident that you\\u2019ve solved the problem, it\\u2019s time to submit a PR. Look in the project for a \",(0,t.jsx)(e.strong,{children:\"CONTRIBUTORS.md\"}),\" file--most open source projects on GitHub will likely have this within their project. This file will contain instructions on how this project would like PRs to be submitted by contributors. They may request strict branch naming conventions, PR titles, documentation or tests, comments, or other things in pull-requests. GitHub also has a \",(0,t.jsx)(e.a,{href:\"https://opensource.guide/how-to-contribute/#a-checklist-before-you-contribute\",children:\"great checklist\"}),\" on what to check for before you open your pull-request.\\xA0\"]}),`\n`,(0,t.jsx)(e.p,{children:\"Create the PR and follow the PR template if the project has one. Be sure to link back to the original ticket. The maintainer may request changes or want to have a discussion about your changes. It\\u2019s normal to have a back-and-forth before a PR is accepted. Work with the maintainer until your PR is ready to be accepted.\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Once your PR passes the maintainer\\u2019s review, they will merge your code in.\\xA0\",(0,t.jsx)(e.br,{}),`\n`,(0,t.jsx)(e.strong,{children:\"Congratulations!\"}),\" You\\u2019re an open source contributor!!\"]}),`\n`,(0,t.jsxs)(e.h3,{id:\"are-you-an-open-source-project-maintainer-release-wants-to-support-you\",children:[(0,t.jsx)(e.a,{className:\"anchor\",href:\"#are-you-an-open-source-project-maintainer-release-wants-to-support-you\",children:(0,t.jsx)(e.span,{className:\"icon icon-link\"})}),\"Are You An Open Source Project Maintainer? Release Wants To Support You!\"]}),`\n`,(0,t.jsxs)(e.p,{children:[\"Open source projects benefit dramatically from Ephemeral Environments on every pull-request. We love open source and are dedicated to giving back. \",(0,t.jsx)(e.a,{href:\"https://share.hsforms.com/1YM0zqIgsTc2aD2oPDQUQJA4shs5\",children:\"Contact us\"}),\" to find out how we can help fuel your rocket through preview environments and help put confidence in contributor\\u2019s PRs.\"]})]})}function v(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,Object.assign({},n,{children:(0,t.jsx)(l,n)})):l(n)}var j=v;return w(T);})();\n;return Component;"
  },
  "_id": "blog/posts/contributing-to-open-source.mdx",
  "_raw": {
    "sourceFilePath": "blog/posts/contributing-to-open-source.mdx",
    "sourceFileName": "contributing-to-open-source.mdx",
    "sourceFileDir": "blog/posts",
    "contentType": "mdx",
    "flattenedPath": "blog/posts/contributing-to-open-source"
  },
  "type": "BlogPost",
  "computedSlug": "contributing-to-open-source"
}