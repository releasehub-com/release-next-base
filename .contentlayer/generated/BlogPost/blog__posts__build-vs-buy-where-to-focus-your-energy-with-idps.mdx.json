{
  "title": "Build vs. Buy: Where to Focus Your Energy with IDPs",
  "summary": "Let‚Äôs explore a significant decision in every software endeavor: do we build or do we buy?",
  "publishDate": "Tue Sep 12 2023 17:44:15 GMT+0000 (Coordinated Universal Time)",
  "author": "sylvia-fronczak",
  "readingTime": 10,
  "categories": [
    "platform-engineering",
    "product"
  ],
  "mainImage": "/blog-images/1b6998ea6557914087a8b77eda4fe01b.jpg",
  "imageAlt": "Credit: Google DeepMind",
  "showCTA": true,
  "ctaCopy": "Empower your team to focus on building with Release's ephemeral environments for faster deployment cycles.",
  "ctaLink": "https://release.com/signup?utm_source=blog&utm_medium=cta&utm_campaign=blog-cta&utm_content=build-vs-buy-where-to-focus-your-energy-with-idps",
  "relatedPosts": [
    "components-of-a-successful-idp-build-a-product-your-developers-actually-want-to-use"
  ],
  "ogImage": "/blog-images/1b6998ea6557914087a8b77eda4fe01b.jpg",
  "excerpt": "Let‚Äôs explore a significant decision in every software endeavor: do we build or do we buy?",
  "tags": [
    "platform-engineering",
    "product"
  ],
  "ctaButton": "Try Release for Free",
  "body": {
    "raw": "\nPreviously, we wrote about the goals and outcomes of [an Internal Developer Platform (IDP](https://release.com/blog/what-is-an-internal-developer-platform-and-why-should-i-have-one)), as well as the [components of a successful IDP](https://release.com/blog/components-of-a-successful-idp-build-a-product-your-developers-actually-want-to-use). At this point, you may be either excited by or overwhelmed with where your platform could go and the efficiencies that it could create.\n\nAs the next step, let‚Äôs explore a significant decision in every software endeavor: do we build or do we buy?\n\nConsidering this is rarely a clean ‚Äúyes or no‚Äù question, we‚Äôre also going to look at the options that sit between the two. In actuality, the solution you choose will be somewhere on a large spectrum between a complete build from scratch and entirely buying software that you never have to maintain yourself. Where your org falls on that spectrum depends on your current needs and capabilities.\n\nFirst, let‚Äôs look at some of the options available.\n\n#### Build or Buy, or Else?\n\nWhen we make decisions around build vs. buy, we should first realize that when it comes to an IDP, it‚Äôs not all or nothing. This is a spectrum, where you can buy a managed IDP and all related components or you can pick and choose what you build and what you buy. As a reminder, an IDP isn‚Äôt one solution, but a platform with various components that provide solutions to different problems. Therefore, you can choose to build or buy the platform and the separate components.\n\n![](/blog-images/1863e6f1f0c7adae1cc585f2ba216bd3.png)\n\n‚Äç**üõ†Ô∏è Fully Build the IDP and Integrations**\n\nThe most involved option would be to build everything yourself from scratch. This will be the most expensive option and will require a large team, but in theory, it will give you the most flexibility.\n\nSpotify did this when they built Backstage. Now, you may think that that‚Äôs the way to go. But do realize that Spotify had a large number of people working on this both internally and later externally when the platform was released as open source. Once they went open source, they had both individual contributors and partner companies that provided time and engineering efforts toward the build. Their [two-year anniversary called out 5,000 contributors](https://backstage.io/blog/2022/03/16/backstage-turns-two/) to the project.\n\nMost companies do not have hundreds, let alone thousands, of developers who can put in time and effort to building an IDP from scratch. In addition to the large number of resources, that level of contribution requires forgoing other projects within your organization that involve shipping features. As importantly, this platform is just that. A platform. Once you have the platform built, you will then need to configure the necessary components and add-ons that your organization needs. Each of these components will result in a build vs. buy decision, so focus on the most important features for your organization first.\n\n##### ‚Äç**üèóÔ∏è Build Atop Open-Source Frameworks and Commercial Components**\n\nIf you‚Äôre not at the stage where you can build everything (and most organizations aren‚Äôt), another option would be to take an open-source framework and build on top of that.\n\nIn this scenario, you‚Äôre using something like backstage.io but building out the implementation.\n\nThis is a better option over a complete build as the base framework. However, you‚Äôll still need to build integrations and quickly form opinions on how this should work for your organization.\n\nMany prefer this to the build option, but it will still take a considerable team to make it happen. And it‚Äôs not the ideal choice if you‚Äôre just starting to learn about IDPs and how they can help your org.\n\nFor example, companies could choose a managed observability component like Datadog or New Relic. These tools aren‚Äôt cheap but will get your organization started with solid monitoring and observability. However, as costs increase, you could find yourself building your observability tools over open-source libraries like Prometheus and Grafana.\n\nComing at this from a similar angle, you could handle your environment management in-house using Ansible, Terraform, or Docker Compose. You might begin by building out your environment management using these tools as the solution seems simple. As the complexity of your environment management increases, and as the problems you need to solve become more sophisticated, choosing an ephemeral environment solution like Release can reduce the complexity for your teams.\n\n![](/blog-images/2939d24e6fa24544309c8c562fa26486.png)\n\n##### **ü§ùHire Someone to Build It**\n\nFor some software projects, you could consider hiring out the build. For example, you could hire third-party contractors or consultants to build your IDP. Or you could directly hire new employees with the necessary experience and onboard them into your organization to build it out.\n\nOrganizations will take this option if they don‚Äôt have the necessary knowledge in-house. Though this can work, it often has poor outcomes. The folks coming into the org don‚Äôt know the culture and processes of your teams and will need to learn them, or they‚Äôll build something not based on your internal culture and processes. Frequently, for third-party development teams, they don‚Äôt have the level of ownership needed for projects of this size. And hiring new employees for this work will also increase the burden on hiring resources. And if we don‚Äôt have existing employees with this expertise, we will oftentimes make expensive hiring decisions.\n\nTo mitigate some of the risks with these options, you could have a small number of experts build alongside your team so that you have more of your own long-term workforce working on the project than you have temporary parties. That would be the only way I‚Äôd consider this option.\n\n##### ‚Äç**üí∞Buy It: Vendor-Managed Options**\n\nBuying enterprise software isn‚Äôt a plug-it-in-and-forget-it endeavor. There will still be work involved in configuration, management, and onboarding teams. This is even more true for IDPs, as they are simply platforms and will need the right components and integrations added on to make a usable product.\n\nEven though there‚Äôs not a complete buy-it option, buying the right components that provide value to your org will reduce the development burden on your teams. You‚Äôll be able to focus on the integrations that solve your organization‚Äôs biggest development workflow pain points, which can free you up to decide how you want to incorporate the use of the IDP into your organizational culture.\n\nAdditionally, for an IDP, you have managed solutions available for a number of components. For example, there are organizations that provide managed IDP solutions like [Cortex](https://www.cortex.io/) or [OpsLevel](https://www.opslevel.com/) for service catalogs and integrations to other tools.\n\nYou can also consider whether it makes sense to buy components and capabilities that extend your IDP. Let‚Äôs consider the monitoring and observability components of your IDP. We already mentioned purchasing products like Datadog or New Relic. You can further this by adding paging options like [PagerDuty](https://www.pagerduty.com/) or [Opsgenie](https://www.atlassian.com/software/opsgenie). These problems have robust solutions on the market that can fill your organization‚Äôs needs.\n\nWhen it comes to environment management, Release provides a managed platform as a service (PAAS) solution for managing both standard and ephemeral environments. This provides additional building blocks for your IDP, adding environment management capabilities to further increase your development team efficiency. And yes, you could build it yourself, scripting atop open-source solutions like [Terraform](https://www.terraform.io/) or [Docker Compose](https://docs.docker.com/compose/). But again, these types of products are not something that will take a few days and still scale well.\n\nWhen considering what components to build or buy, consider how the value compares to the effort. What components can provide big benefits to your engineering teams that will take a lot of time and effort to build? And consider your most pressing needs. Do you need a central place to locate tools and services? How about robust monitoring tools to operate your systems? Or environment management to increase developer velocity? And which do you want to benefit from quickly?\n\n![](/blog-images/cd72cd05beb337ab5405213445b5211a.png)\n\n#### Build vs. Buy Factors to Consider\n\nWe‚Äôve gone over many alternatives in the build, build on open source, hire out, and buy spectrum. There isn‚Äôt a one-size-fits-all solution, and you‚Äôll have to consider what‚Äôs best for your organization.\n\nBut there are a number of things to consider when deciding if you will build or buy your IDP.\n\n##### 1\\. Cost\n\nCost isn‚Äôt just the amount of money that you‚Äôll spend on the software licenses or the developer headcount to build the IDP. If you buy software, you‚Äôll still have to spend time on training, evangelizing, and configuring the IDP for your organization. If you build, you‚Äôll need to include engineering time as well as the training, evangelizing, and configuring just like when you buy. Building also includes opportunity costs. What could your engineering staff be building to further differentiate your product in the market? Should you focus their energies on your product or on integrations that all organizations need?\n\n##### 2\\. Expertise and Capabilities\n\nBuilding software like an IDP requires a team with the right skills and expertise. And don‚Äôt think your team of five production engineers can take on this effort. Organizations like Netflix, Facebook, and Spotify can build tools like this in-house because they have hundreds, if not more, of employees working on internal systems and efficiencies. These folks are dedicated to improving the developer experience.\n\nIf you have a small development team focused on application or product development, developing a [production engineering](https://engineering.fb.com/category/production-engineering/) or platform enablement team will not work well. It won‚Äôt take advantage of their expertise in your domain and will take them away from building the product that is your market differentiator.\n\n##### 3\\. Scalability\n\nWith the build option, you do control the ability to scale the needs of the system yourself to your specific loads and use cases. However, consider whether you could start with buying a managed IDP option and then move over to build after you‚Äôve outgrown the capabilities and scale of that option.\n\n##### 4\\. Custom Integrations\n\nIf your organization has its own custom-built tools for testing, security, governance, or more, integrations through an IDP may be more difficult. Or you‚Äôll potentially have the same amount of effort between the build and the buy option.\n\n##### 5\\. Security and Compliance\n\nWhen you build the software, you can control the security and compliance features. But that also means you must be the experts in security and compliance. This loops back to #2. Do you have the expertise, or do you need to offload that need for expertise to another organization where it‚Äôs their product differentiator?\n\n##### 6\\. Competitive Advantage\n\nIf you‚Äôre an org like Spotify, Netflix, Meta, or similar, then squeezing every bit of efficiency out of your development team by ensuring everything is custom-built for their needs makes sense. But if you‚Äôre not at that scale, consider starting smaller.\n\n##### 7\\. Usability and Adoption\n\nIf you build a custom IDP but don‚Äôt consider usability, then you will have poor adoption. This means not only UI concerns of the IDP but also usability of configurations and interactions with the developer workflow.\n\n##### 8\\. Support\n\nCustom-built solutions won‚Äôt have an internet full of adopters that use the tool or similar tools for debugging, tutorials, and instructions. Buying software solutions through a vendor-managed option means you don‚Äôt have to create a large support network and can offload much of that to the wider developer ecosystem.\n\n##### 9\\. Course Correction\n\nOne final factor involves transitioning from one decision to another. Consider this. Would it be easier and more economical to move from a ‚Äúbuy‚Äù solution that doesn‚Äôt meet your needs or from a ‚Äúbuild‚Äù solution that fails? If you decide to build but find that this is not maintainable or salable, then the effort put into building will be wasted.\n\nIf you find that a buy solution doesn‚Äôt work for your needs, yes, you‚Äôll still have sunk costs, but they should be more manageable. Depending on the components involved and your expertise, your answer can vary.\n\nHowever, if you start with a buy solution or use a PaaS or managed solution, you can transition to build when you‚Äôre ready. You‚Äôll build up the experience needed and the understanding of what you need from the product. For something like an IDP that consists of many integrated components, you can build piece by piece, taking on more of the build as your organization‚Äôs expertise and understanding of the component grows.\n\n#### Making a Decision\n\nMaking the right decision depends on many factors that vary across organizations. Consider what‚Äôs best for your situation today and focus on solving for the 80% before deciding to move to a build solution. This may consist of a combination of building, building on top of open source, buying, or hiring out.\n\nIn the next installment of this series, we‚Äôll talk about using product thinking to establish your IDP. Stay tuned!\n\n‚Äç*This post was written by Sylvia Fronczak.* [_Sylvia_](https://sylviafronczak.com/) _is a software developer who has worked in various industries with various software methodologies. She‚Äôs currently focused on design practices that the whole team can own, understand, and evolve over time._\n",
    "code": "var Component=(()=>{var h=Object.create;var a=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var f=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),g=(n,e)=>{for(var t in e)a(n,t,{get:e[t],enumerable:!0})},s=(n,e,t,r)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of p(e))!y.call(n,i)&&i!==t&&a(n,i,{get:()=>e[i],enumerable:!(r=u(e,i))||r.enumerable});return n};var b=(n,e,t)=>(t=n!=null?h(m(n)):{},s(e||!n||!n.__esModule?a(t,\"default\",{value:n,enumerable:!0}):t,n)),w=n=>s(a({},\"__esModule\",{value:!0}),n);var d=f((N,l)=>{l.exports=_jsx_runtime});var x={};g(x,{default:()=>I,frontmatter:()=>v});var o=b(d()),v={title:\"Build vs. Buy: Where to Focus Your Energy with IDPs\",summary:\"Let\\u2019s explore a significant decision in every software endeavor: do we build or do we buy?\",publishDate:\"Tue Sep 12 2023 17:44:15 GMT+0000 (Coordinated Universal Time)\",author:\"sylvia-fronczak\",readingTime:10,categories:[\"platform-engineering\",\"product\"],mainImage:\"/blog-images/1b6998ea6557914087a8b77eda4fe01b.jpg\",imageAlt:\"Credit: Google DeepMind\",showCTA:!0,ctaCopy:\"Empower your team to focus on building with Release's ephemeral environments for faster deployment cycles.\",ctaLink:\"https://release.com/signup?utm_source=blog&utm_medium=cta&utm_campaign=blog-cta&utm_content=build-vs-buy-where-to-focus-your-energy-with-idps\",relatedPosts:[\"components-of-a-successful-idp-build-a-product-your-developers-actually-want-to-use\"],ogImage:\"/blog-images/1b6998ea6557914087a8b77eda4fe01b.jpg\",excerpt:\"Let\\u2019s explore a significant decision in every software endeavor: do we build or do we buy?\",tags:[\"platform-engineering\",\"product\"],ctaButton:\"Try Release for Free\"};function c(n){let e=Object.assign({p:\"p\",a:\"a\",h4:\"h4\",span:\"span\",img:\"img\",strong:\"strong\",h5:\"h5\",em:\"em\"},n.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(e.p,{children:[\"Previously, we wrote about the goals and outcomes of \",(0,o.jsx)(e.a,{href:\"https://release.com/blog/what-is-an-internal-developer-platform-and-why-should-i-have-one\",children:\"an Internal Developer Platform (IDP\"}),\"), as well as the \",(0,o.jsx)(e.a,{href:\"https://release.com/blog/components-of-a-successful-idp-build-a-product-your-developers-actually-want-to-use\",children:\"components of a successful IDP\"}),\". At this point, you may be either excited by or overwhelmed with where your platform could go and the efficiencies that it could create.\"]}),`\n`,(0,o.jsx)(e.p,{children:\"As the next step, let\\u2019s explore a significant decision in every software endeavor: do we build or do we buy?\"}),`\n`,(0,o.jsx)(e.p,{children:\"Considering this is rarely a clean \\u201Cyes or no\\u201D question, we\\u2019re also going to look at the options that sit between the two. In actuality, the solution you choose will be somewhere on a large spectrum between a complete build from scratch and entirely buying software that you never have to maintain yourself. Where your org falls on that spectrum depends on your current needs and capabilities.\"}),`\n`,(0,o.jsx)(e.p,{children:\"First, let\\u2019s look at some of the options available.\"}),`\n`,(0,o.jsxs)(e.h4,{id:\"build-or-buy-or-else\",children:[(0,o.jsx)(e.a,{className:\"anchor\",href:\"#build-or-buy-or-else\",children:(0,o.jsx)(e.span,{className:\"icon icon-link\"})}),\"Build or Buy, or Else?\"]}),`\n`,(0,o.jsx)(e.p,{children:\"When we make decisions around build vs. buy, we should first realize that when it comes to an IDP, it\\u2019s not all or nothing. This is a spectrum, where you can buy a managed IDP and all related components or you can pick and choose what you build and what you buy. As a reminder, an IDP isn\\u2019t one solution, but a platform with various components that provide solutions to different problems. Therefore, you can choose to build or buy the platform and the separate components.\"}),`\n`,(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{src:\"/blog-images/1863e6f1f0c7adae1cc585f2ba216bd3.png\",alt:\"\"})}),`\n`,(0,o.jsxs)(e.p,{children:[\"\\u200D\",(0,o.jsx)(e.strong,{children:\"\\u{1F6E0}\\uFE0F Fully Build the IDP and Integrations\"})]}),`\n`,(0,o.jsx)(e.p,{children:\"The most involved option would be to build everything yourself from scratch. This will be the most expensive option and will require a large team, but in theory, it will give you the most flexibility.\"}),`\n`,(0,o.jsxs)(e.p,{children:[\"Spotify did this when they built Backstage. Now, you may think that that\\u2019s the way to go. But do realize that Spotify had a large number of people working on this both internally and later externally when the platform was released as open source. Once they went open source, they had both individual contributors and partner companies that provided time and engineering efforts toward the build. Their \",(0,o.jsx)(e.a,{href:\"https://backstage.io/blog/2022/03/16/backstage-turns-two/\",children:\"two-year anniversary called out 5,000 contributors\"}),\" to the project.\"]}),`\n`,(0,o.jsx)(e.p,{children:\"Most companies do not have hundreds, let alone thousands, of developers who can put in time and effort to building an IDP from scratch. In addition to the large number of resources, that level of contribution requires forgoing other projects within your organization that involve shipping features. As importantly, this platform is just that. A platform. Once you have the platform built, you will then need to configure the necessary components and add-ons that your organization needs. Each of these components will result in a build vs. buy decision, so focus on the most important features for your organization first.\"}),`\n`,(0,o.jsxs)(e.h5,{id:\"\\uFE0F-build-atop-open-source-frameworks-and-commercial-components\",children:[(0,o.jsx)(e.a,{className:\"anchor\",href:\"#\\uFE0F-build-atop-open-source-frameworks-and-commercial-components\",children:(0,o.jsx)(e.span,{className:\"icon icon-link\"})}),\"\\u200D\",(0,o.jsx)(e.strong,{children:\"\\u{1F3D7}\\uFE0F Build Atop Open-Source Frameworks and Commercial Components\"})]}),`\n`,(0,o.jsx)(e.p,{children:\"If you\\u2019re not at the stage where you can build everything (and most organizations aren\\u2019t), another option would be to take an open-source framework and build on top of that.\"}),`\n`,(0,o.jsx)(e.p,{children:\"In this scenario, you\\u2019re using something like backstage.io but building out the implementation.\"}),`\n`,(0,o.jsx)(e.p,{children:\"This is a better option over a complete build as the base framework. However, you\\u2019ll still need to build integrations and quickly form opinions on how this should work for your organization.\"}),`\n`,(0,o.jsx)(e.p,{children:\"Many prefer this to the build option, but it will still take a considerable team to make it happen. And it\\u2019s not the ideal choice if you\\u2019re just starting to learn about IDPs and how they can help your org.\"}),`\n`,(0,o.jsx)(e.p,{children:\"For example, companies could choose a managed observability component like Datadog or New Relic. These tools aren\\u2019t cheap but will get your organization started with solid monitoring and observability. However, as costs increase, you could find yourself building your observability tools over open-source libraries like Prometheus and Grafana.\"}),`\n`,(0,o.jsx)(e.p,{children:\"Coming at this from a similar angle, you could handle your environment management in-house using Ansible, Terraform, or Docker Compose. You might begin by building out your environment management using these tools as the solution seems simple. As the complexity of your environment management increases, and as the problems you need to solve become more sophisticated, choosing an ephemeral environment solution like Release can reduce the complexity for your teams.\"}),`\n`,(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{src:\"/blog-images/2939d24e6fa24544309c8c562fa26486.png\",alt:\"\"})}),`\n`,(0,o.jsxs)(e.h5,{id:\"hire-someone-to-build-it\",children:[(0,o.jsx)(e.a,{className:\"anchor\",href:\"#hire-someone-to-build-it\",children:(0,o.jsx)(e.span,{className:\"icon icon-link\"})}),(0,o.jsx)(e.strong,{children:\"\\u{1F91D}Hire Someone to Build It\"})]}),`\n`,(0,o.jsx)(e.p,{children:\"For some software projects, you could consider hiring out the build. For example, you could hire third-party contractors or consultants to build your IDP. Or you could directly hire new employees with the necessary experience and onboard them into your organization to build it out.\"}),`\n`,(0,o.jsx)(e.p,{children:\"Organizations will take this option if they don\\u2019t have the necessary knowledge in-house. Though this can work, it often has poor outcomes. The folks coming into the org don\\u2019t know the culture and processes of your teams and will need to learn them, or they\\u2019ll build something not based on your internal culture and processes. Frequently, for third-party development teams, they don\\u2019t have the level of ownership needed for projects of this size. And hiring new employees for this work will also increase the burden on hiring resources. And if we don\\u2019t have existing employees with this expertise, we will oftentimes make expensive hiring decisions.\"}),`\n`,(0,o.jsx)(e.p,{children:\"To mitigate some of the risks with these options, you could have a small number of experts build alongside your team so that you have more of your own long-term workforce working on the project than you have temporary parties. That would be the only way I\\u2019d consider this option.\"}),`\n`,(0,o.jsxs)(e.h5,{id:\"buy-it-vendor-managed-options\",children:[(0,o.jsx)(e.a,{className:\"anchor\",href:\"#buy-it-vendor-managed-options\",children:(0,o.jsx)(e.span,{className:\"icon icon-link\"})}),\"\\u200D\",(0,o.jsx)(e.strong,{children:\"\\u{1F4B0}Buy It: Vendor-Managed Options\"})]}),`\n`,(0,o.jsx)(e.p,{children:\"Buying enterprise software isn\\u2019t a plug-it-in-and-forget-it endeavor. There will still be work involved in configuration, management, and onboarding teams. This is even more true for IDPs, as they are simply platforms and will need the right components and integrations added on to make a usable product.\"}),`\n`,(0,o.jsx)(e.p,{children:\"Even though there\\u2019s not a complete buy-it option, buying the right components that provide value to your org will reduce the development burden on your teams. You\\u2019ll be able to focus on the integrations that solve your organization\\u2019s biggest development workflow pain points, which can free you up to decide how you want to incorporate the use of the IDP into your organizational culture.\"}),`\n`,(0,o.jsxs)(e.p,{children:[\"Additionally, for an IDP, you have managed solutions available for a number of components. For example, there are organizations that provide managed IDP solutions like \",(0,o.jsx)(e.a,{href:\"https://www.cortex.io/\",children:\"Cortex\"}),\" or \",(0,o.jsx)(e.a,{href:\"https://www.opslevel.com/\",children:\"OpsLevel\"}),\" for service catalogs and integrations to other tools.\"]}),`\n`,(0,o.jsxs)(e.p,{children:[\"You can also consider whether it makes sense to buy components and capabilities that extend your IDP. Let\\u2019s consider the monitoring and observability components of your IDP. We already mentioned purchasing products like Datadog or New Relic. You can further this by adding paging options like \",(0,o.jsx)(e.a,{href:\"https://www.pagerduty.com/\",children:\"PagerDuty\"}),\" or \",(0,o.jsx)(e.a,{href:\"https://www.atlassian.com/software/opsgenie\",children:\"Opsgenie\"}),\". These problems have robust solutions on the market that can fill your organization\\u2019s needs.\"]}),`\n`,(0,o.jsxs)(e.p,{children:[\"When it comes to environment management, Release provides a managed platform as a service (PAAS) solution for managing both standard and ephemeral environments. This provides additional building blocks for your IDP, adding environment management capabilities to further increase your development team efficiency. And yes, you could build it yourself, scripting atop open-source solutions like \",(0,o.jsx)(e.a,{href:\"https://www.terraform.io/\",children:\"Terraform\"}),\" or \",(0,o.jsx)(e.a,{href:\"https://docs.docker.com/compose/\",children:\"Docker Compose\"}),\". But again, these types of products are not something that will take a few days and still scale well.\"]}),`\n`,(0,o.jsx)(e.p,{children:\"When considering what components to build or buy, consider how the value compares to the effort. What components can provide big benefits to your engineering teams that will take a lot of time and effort to build? And consider your most pressing needs. Do you need a central place to locate tools and services? How about robust monitoring tools to operate your systems? Or environment management to increase developer velocity? And which do you want to benefit from quickly?\"}),`\n`,(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{src:\"/blog-images/cd72cd05beb337ab5405213445b5211a.png\",alt:\"\"})}),`\n`,(0,o.jsxs)(e.h4,{id:\"build-vs-buy-factors-to-consider\",children:[(0,o.jsx)(e.a,{className:\"anchor\",href:\"#build-vs-buy-factors-to-consider\",children:(0,o.jsx)(e.span,{className:\"icon icon-link\"})}),\"Build vs. Buy Factors to Consider\"]}),`\n`,(0,o.jsx)(e.p,{children:\"We\\u2019ve gone over many alternatives in the build, build on open source, hire out, and buy spectrum. There isn\\u2019t a one-size-fits-all solution, and you\\u2019ll have to consider what\\u2019s best for your organization.\"}),`\n`,(0,o.jsx)(e.p,{children:\"But there are a number of things to consider when deciding if you will build or buy your IDP.\"}),`\n`,(0,o.jsxs)(e.h5,{id:\"1-cost\",children:[(0,o.jsx)(e.a,{className:\"anchor\",href:\"#1-cost\",children:(0,o.jsx)(e.span,{className:\"icon icon-link\"})}),\"1. Cost\"]}),`\n`,(0,o.jsx)(e.p,{children:\"Cost isn\\u2019t just the amount of money that you\\u2019ll spend on the software licenses or the developer headcount to build the IDP. If you buy software, you\\u2019ll still have to spend time on training, evangelizing, and configuring the IDP for your organization. If you build, you\\u2019ll need to include engineering time as well as the training, evangelizing, and configuring just like when you buy. Building also includes opportunity costs. What could your engineering staff be building to further differentiate your product in the market? Should you focus their energies on your product or on integrations that all organizations need?\"}),`\n`,(0,o.jsxs)(e.h5,{id:\"2-expertise-and-capabilities\",children:[(0,o.jsx)(e.a,{className:\"anchor\",href:\"#2-expertise-and-capabilities\",children:(0,o.jsx)(e.span,{className:\"icon icon-link\"})}),\"2. Expertise and Capabilities\"]}),`\n`,(0,o.jsx)(e.p,{children:\"Building software like an IDP requires a team with the right skills and expertise. And don\\u2019t think your team of five production engineers can take on this effort. Organizations like Netflix, Facebook, and Spotify can build tools like this in-house because they have hundreds, if not more, of employees working on internal systems and efficiencies. These folks are dedicated to improving the developer experience.\"}),`\n`,(0,o.jsxs)(e.p,{children:[\"If you have a small development team focused on application or product development, developing a \",(0,o.jsx)(e.a,{href:\"https://engineering.fb.com/category/production-engineering/\",children:\"production engineering\"}),\" or platform enablement team will not work well. It won\\u2019t take advantage of their expertise in your domain and will take them away from building the product that is your market differentiator.\"]}),`\n`,(0,o.jsxs)(e.h5,{id:\"3-scalability\",children:[(0,o.jsx)(e.a,{className:\"anchor\",href:\"#3-scalability\",children:(0,o.jsx)(e.span,{className:\"icon icon-link\"})}),\"3. Scalability\"]}),`\n`,(0,o.jsx)(e.p,{children:\"With the build option, you do control the ability to scale the needs of the system yourself to your specific loads and use cases. However, consider whether you could start with buying a managed IDP option and then move over to build after you\\u2019ve outgrown the capabilities and scale of that option.\"}),`\n`,(0,o.jsxs)(e.h5,{id:\"4-custom-integrations\",children:[(0,o.jsx)(e.a,{className:\"anchor\",href:\"#4-custom-integrations\",children:(0,o.jsx)(e.span,{className:\"icon icon-link\"})}),\"4. Custom Integrations\"]}),`\n`,(0,o.jsx)(e.p,{children:\"If your organization has its own custom-built tools for testing, security, governance, or more, integrations through an IDP may be more difficult. Or you\\u2019ll potentially have the same amount of effort between the build and the buy option.\"}),`\n`,(0,o.jsxs)(e.h5,{id:\"5-security-and-compliance\",children:[(0,o.jsx)(e.a,{className:\"anchor\",href:\"#5-security-and-compliance\",children:(0,o.jsx)(e.span,{className:\"icon icon-link\"})}),\"5. Security and Compliance\"]}),`\n`,(0,o.jsx)(e.p,{children:\"When you build the software, you can control the security and compliance features. But that also means you must be the experts in security and compliance. This loops back to #2. Do you have the expertise, or do you need to offload that need for expertise to another organization where it\\u2019s their product differentiator?\"}),`\n`,(0,o.jsxs)(e.h5,{id:\"6-competitive-advantage\",children:[(0,o.jsx)(e.a,{className:\"anchor\",href:\"#6-competitive-advantage\",children:(0,o.jsx)(e.span,{className:\"icon icon-link\"})}),\"6. Competitive Advantage\"]}),`\n`,(0,o.jsx)(e.p,{children:\"If you\\u2019re an org like Spotify, Netflix, Meta, or similar, then squeezing every bit of efficiency out of your development team by ensuring everything is custom-built for their needs makes sense. But if you\\u2019re not at that scale, consider starting smaller.\"}),`\n`,(0,o.jsxs)(e.h5,{id:\"7-usability-and-adoption\",children:[(0,o.jsx)(e.a,{className:\"anchor\",href:\"#7-usability-and-adoption\",children:(0,o.jsx)(e.span,{className:\"icon icon-link\"})}),\"7. Usability and Adoption\"]}),`\n`,(0,o.jsx)(e.p,{children:\"If you build a custom IDP but don\\u2019t consider usability, then you will have poor adoption. This means not only UI concerns of the IDP but also usability of configurations and interactions with the developer workflow.\"}),`\n`,(0,o.jsxs)(e.h5,{id:\"8-support\",children:[(0,o.jsx)(e.a,{className:\"anchor\",href:\"#8-support\",children:(0,o.jsx)(e.span,{className:\"icon icon-link\"})}),\"8. Support\"]}),`\n`,(0,o.jsx)(e.p,{children:\"Custom-built solutions won\\u2019t have an internet full of adopters that use the tool or similar tools for debugging, tutorials, and instructions. Buying software solutions through a vendor-managed option means you don\\u2019t have to create a large support network and can offload much of that to the wider developer ecosystem.\"}),`\n`,(0,o.jsxs)(e.h5,{id:\"9-course-correction\",children:[(0,o.jsx)(e.a,{className:\"anchor\",href:\"#9-course-correction\",children:(0,o.jsx)(e.span,{className:\"icon icon-link\"})}),\"9. Course Correction\"]}),`\n`,(0,o.jsx)(e.p,{children:\"One final factor involves transitioning from one decision to another. Consider this. Would it be easier and more economical to move from a \\u201Cbuy\\u201D solution that doesn\\u2019t meet your needs or from a \\u201Cbuild\\u201D solution that fails? If you decide to build but find that this is not maintainable or salable, then the effort put into building will be wasted.\"}),`\n`,(0,o.jsx)(e.p,{children:\"If you find that a buy solution doesn\\u2019t work for your needs, yes, you\\u2019ll still have sunk costs, but they should be more manageable. Depending on the components involved and your expertise, your answer can vary.\"}),`\n`,(0,o.jsx)(e.p,{children:\"However, if you start with a buy solution or use a PaaS or managed solution, you can transition to build when you\\u2019re ready. You\\u2019ll build up the experience needed and the understanding of what you need from the product. For something like an IDP that consists of many integrated components, you can build piece by piece, taking on more of the build as your organization\\u2019s expertise and understanding of the component grows.\"}),`\n`,(0,o.jsxs)(e.h4,{id:\"making-a-decision\",children:[(0,o.jsx)(e.a,{className:\"anchor\",href:\"#making-a-decision\",children:(0,o.jsx)(e.span,{className:\"icon icon-link\"})}),\"Making a Decision\"]}),`\n`,(0,o.jsx)(e.p,{children:\"Making the right decision depends on many factors that vary across organizations. Consider what\\u2019s best for your situation today and focus on solving for the 80% before deciding to move to a build solution. This may consist of a combination of building, building on top of open source, buying, or hiring out.\"}),`\n`,(0,o.jsx)(e.p,{children:\"In the next installment of this series, we\\u2019ll talk about using product thinking to establish your IDP. Stay tuned!\"}),`\n`,(0,o.jsxs)(e.p,{children:[\"\\u200D\",(0,o.jsx)(e.em,{children:\"This post was written by Sylvia Fronczak.\"}),\" \",(0,o.jsx)(e.a,{href:\"https://sylviafronczak.com/\",children:(0,o.jsx)(e.em,{children:\"Sylvia\"})}),\" \",(0,o.jsx)(e.em,{children:\"is a software developer who has worked in various industries with various software methodologies. She\\u2019s currently focused on design practices that the whole team can own, understand, and evolve over time.\"})]})]})}function k(n={}){let{wrapper:e}=n.components||{};return e?(0,o.jsx)(e,Object.assign({},n,{children:(0,o.jsx)(c,n)})):c(n)}var I=k;return w(x);})();\n;return Component;"
  },
  "_id": "blog/posts/build-vs-buy-where-to-focus-your-energy-with-idps.mdx",
  "_raw": {
    "sourceFilePath": "blog/posts/build-vs-buy-where-to-focus-your-energy-with-idps.mdx",
    "sourceFileName": "build-vs-buy-where-to-focus-your-energy-with-idps.mdx",
    "sourceFileDir": "blog/posts",
    "contentType": "mdx",
    "flattenedPath": "blog/posts/build-vs-buy-where-to-focus-your-energy-with-idps"
  },
  "type": "BlogPost",
  "computedSlug": "build-vs-buy-where-to-focus-your-energy-with-idps"
}