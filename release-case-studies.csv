Name,Slug,Collection ID,Item ID,Created On,Updated On,Published On,Thumbnail,Title,Description,Body text,Logo,Order,Customer Profile | Company Size,Customer Profile | Industry,Customer Profile | Location,Customer Profile | Development Velocity,Customer Profile | Developer Experience,Customer Profile | Lean Operations
Chipper Cash,chipper-cash,62aa5a70cd5ba27fe40d718b,630e59abaa43e97941c6e55f,Tue Aug 30 2022 18:40:43 GMT+0000 (Coordinated Universal Time),Thu Feb 29 2024 22:11:31 GMT+0000 (Coordinated Universal Time),Thu Feb 29 2024 22:13:29 GMT+0000 (Coordinated Universal Time),https://uploads-ssl.webflow.com/603dd147c5b0a4221d1bd360/638a6c562055366c9ce0678d_chipper-case-study-svg.svg,Chipper Cash cuts testing time from ~24 hours to about 5 min,Chipper Cash brings in Release to cut developer downtime and increase efficiencies and collaboration.,"<h4 id="""">About the Company</h4><p id="""">Chipper Cash is a financial technology company serving more than five million people across the African continent. In 2018, Chipper Cash revolutionized intra-Africa money transfers with the introduction of fee-free personal payments—providing a frictionless way to send and receive money cross-border—immediately offering financial inclusivity to millions.</p><p id="""">Since then, Chipper Cash has increased its product suite, introducing services across personal investments and digital business transactions, and expanded its reach into the UK and US. <br><br>Led by Ugandan and Ghanian co-founders Ham Serunjogi and Maijid Moujaled, Chipper Cash is focused on its mission to unlock global opportunities and connect Africa.</p><h4 id="""">Key Release Technologies Used</h4><p id="""">Ephemeral Environments</p><p id="""">App Imports&nbsp;</p><h4 id="""">Challenge</h4><p id="""">Chipper Cash has a remote-first philosophy, meaning the company has a global cohort of team members based across the world. For Chipper Cash’s population of engineers, it was critical to have quick and easy access to tools and systems that help combat complexities around collaboration and learning is critical.&nbsp; <br></p><p id="""">To aid this, Chipper Cash wanted to set up local (or isolated environments) builds that would emulate the backend, so developers could test changes. Think about it this way- if you’re developing a feature or trying to test a bug, it can be difficult and time intensive, as there are many moving pieces to the backend of an application. ChipperCash found the engineers only had two options: ship a massive image at once (which can cause major outages), or make changes quickly, which introduces risk. <br><br>Neither option was proving suitable. Based on demands within the fintech industry, Chipper Cash needs to make changes quickly without risk of breaking other developers’ work. Additionally, Chipper Cash needed a responsive tool that was also natively integrated with their source code.</p><h4 id="""">Pre-Release</h4><p id="""">Before Release, Chipper Cash hosted their staging environment, or as they refer to it, their sandbox environment, in Heroku. However, a single staging environment meant dozens of developers were waiting in line to test changes. This became increasingly problematic as they added more engineers to their team, resulting in more pull requests, and unmanageable operational overhead.</p><p id="""">‍<br>They found teams still had to diligently follow a set of rules and test changes in the staging environment, which led to a backlog of test requirements. This bottleneck caused multi day delays of feature releases, while their engineering team continued to scale. They realized engineers were being slowed down as they waited in line to test changes for solutions that ultimately didn’t meet their needs. If they had the ability to test earlier in the development process, they recognized they would have saved dozens of development hours building ill-fitting solutions.</p><h4 id="""">A New Solution</h4><p id="""">Release allowed Chipper Cash to alleviate the difficulties—the undifferentiated lift and time required to build and maintain these environments. As a mobile app that uses 90% Javascript, each engineer now has their own isolated test environment to work asynchronously, hosted in their own AWS account. It has become fast and easy to do a pull request, go to the environment, test some features, and push code through continuous integration pipelines leveraging Release. With Release, Chipper Cash has cut testing time from <strong id=""""><em id="""">~24 hours to about 5 minutes.</em></strong> The team also has the ability within their own dashboards to view pull requests from other engineers and get a visual snapshot of the code that is being pushed out daily. This has increased teamwork and collaboration.&nbsp;&nbsp;</p><h4 id="""">What’s Next</h4><p id="""">Chipper Cash has been most excited about Release’s cross-functional collaboration and continues to expand. There has been a steady flow of teams leveraging these environments to view changes before they are pushed to production. The short-term goal is to increase collaboration as well as migrate all sandbox environments to Release. As the integration continues, developers are no longer limited by bottlenecks and Chipper Cash can release new features to customers faster.</p><h4 id="""">A word from the client</h4><blockquote id="""">The communication between our own departments using the software and the Integration Engineers at Release has created a collaborative environment for us to be successful in our testing. Release has helped cut our testing time from days to minutes and provided insight to how we can optimize internally. It has enabled us to involve more teams to review feature updates and increase synergy within our company.</blockquote><h6 id="""">Wendy Whitsett</h6><h6 id="""">Software Engineer • Chipper Cash</h6>",https://uploads-ssl.webflow.com/603dd147c5b0a4221d1bd360/638a6cdb8a6a0b84bfa78b27_chipper-logo.svg,0,,,,,,
datasaur.ai,datasaurai,62aa5a70cd5ba27fe40d718b,62aa5a70cd5ba222540d72db,Tue Mar 09 2021 22:27:30 GMT+0000 (Coordinated Universal Time),Fri Mar 01 2024 16:29:44 GMT+0000 (Coordinated Universal Time),Fri Mar 01 2024 16:29:50 GMT+0000 (Coordinated Universal Time),https://uploads-ssl.webflow.com/603dd147c5b0a4221d1bd360/62f547161202d896b2a63552_thumbnail-datasaur.png,How Release was able to easily replicate the complex environments of Datasaur.ai,Datasaur is making data labeling simple.,"<h4 id="""">About the client</h4><p id="""">Datasaur is making data labeling simple. They set the standard for best practices in both data labeling and extracting valuable insights from raw data. By labeling data with Datasaur, companies are able to create great machine learning solutions.</p><h4 id="""">Problem</h4><p id="""">When Datasaur came to Release, they were running their application on multiple EC2 nodes in AWS. The engineering team was small but growing, and the VP of Engineering was responsible for their Architecture, implementation, DevOps and SRE functions. They were a seed-round funded startup at the time but didn’t have a budget to grow headcount, especially in the area of DevOps, so the VP of Engineering spent many late nights and weekends keeping the systems running. Like many startups they were making it work, but as their team grew they knew they needed to improve their deployment and environment ecosystem.<br><br>Initially, they needed help building out their pre-production staging ecosystem. They first needed the traditional environments for staging and QA that were automatically deployed when code changed. They also liked the idea of having environments for every Pull Request to enable better code reviews and higher quality deploys.<br><br>After adopting Release for pre-production and staging environments, Datasaur experienced 4x growth in their business and their production ecosystem became a challenge. Scaling to meet the demand of their users was an issue. There were production outages and the existing production environment didn’t afford them the ability to scale up and down with the demands of their users.</p><h4 id="""">How was this solved before</h4><p id="""">In the past, the typical solution to building out a pre-product environment ecosystem for a startup like Datasaur would be to just simply try and re-create the production environment manually. You’d end up with a single shared environment that all the developers used but soon you’d quickly realize that it, being a shared resource, became a bottleneck. <br><br>Because creating the second or third staging environment was time consuming, most startups at the stage of Datasaur wouldn’t invest in automatically created environments with each PR.<br><br>You’d also need to begin building out automation around CI/CD which would require more resources to create an automated workflow. <br><br>Solving spikes in production usage would require manual intervention and constant monitoring to ensure you were keeping up with the demand. You may have used ECR with auto-scaling, but ensuring your application was architected to take advantage of auto-scaling is a time and resource heavy project.<br><br>Typically all of these projects would require hiring more engineers, or more late nights from the most senior engineer or person responsible.<br><br>A typical solution to migrate to a better production system might involve bringing in a DevOps person (or team) to create and manage the workflows that you’d need in order to utilize Kubernetes, but this is an expensive and very time consuming solution. This also won’t solve the issue of urgency for companies that need a solution now without a DevOps team, and without extensive Kubernetes knowledge. &nbsp;<br><br>Another approach may have been to move to something like Heroku, but because Datasaur had a complex application, Heroku was not an option.</p><h4 id="""">A new solution</h4><p id="""">Datasaur needed a new solution that could solve their pre-production environment problems in a fast, cost effective, and streamlined manner. Their application was multi service and complex, which is typically difficult to work with in other platforms such as Heroku. Because Release supports complex, multi-service applications we were able to easily replicate their complex environments.<br><br>As Datasaur grew, their lack of ample environments was causing them issues. They needed a consistent set of environments they wouldn’t need to worry about so they could focus on delivering value to their customers.<br><br>Here at Release we were able to provide Datasaur with an Environments as a Service solution. They used Release to create permanent staging environments that tracked their mainline branch. Whenever a push to their mainline branch occured, the main staging environment was automatically updated. Datasaur created automated tests around this process to increase the quality of code deployed to production. <br><br>Because deployment automation from source control to environment is part of the Release platform, Datasaur didn’t have to spend time building out automation for CI/CD.<br><br>Ephemeral Environments come standard with Release, so they also started utilizing environments with every Pull Request that track feature branches to allow developers and stakeholders to preview changes before they were merged into the mainline branch. <br><br>Lastly, as Datasaur started experiencing rapid growth, we began speaking with them about running production environments in Kubernetes as a way to manage their growth. Because the deployment process and pre-production environment templates were already being run through Release and deployed into Kubernetes, they began seeing how Release could solve their production scaling issues. <br><br>We created a production EKS cluster for Datasaur in preparation for the move to Release powered production when Datasaur had scaling issues over one weekend. The VP of Engineering flipped the switch on DNS and Release began powering production in the middle of an outage to get them the capacity they needed to handle their growth. The lights came back on and they’ve been powered by Release ever since.</p><h4 id="""">Retrospective</h4><p id="""">Datasaur came to us to get reproducible pre-production environments, but quickly saw the path to Kubernetes production as being the right choice. Release migrated Datasaur to Kubernetes seamlessly and without the typical company resources required to make that happen. Instead of hiring a complete DevOps team, and taking up to a year to be fully migrated to Kubernetes, we had them up and running in days, all with a DevOps team of one. They are now an enterprise customer using all of Release’s features.</p><h4 id="""">What’s next</h4><p id="""">As Datasaur continues to grow, they can more fully lean into the features of Release in production so they can scale their operation without having to bring on a full-time DevOps Team. As new engineers join the team, they will gain the benefits of an automated developer experience with environments on-demand. Datasaur won’t have to invest heavily in operational resources for their platform and, instead, will focus those hires on core product work to drive value for their business. They came to us for staging, but grew with us when they realized we could provide an easy, cost-effective, and time-saving way to use Kubernetes in all their environments.</p><h4 id="""">Liked most about Release</h4><p id="""">In addition to relying on Release as their Kubernetes-in-a-box solution, Datasaur also relies on us as their solutions architects. For example, when a random issue arises, we can help them decipher the problem and create a solution to fix it. We fuel their rocketship and have a hand in their mission to make sure they reach their end goal. <br><br>Having an extra set of eyes on their operation lets them know we’ve got their back. We monitor their system and catch things they need to know. When you’ve got a small DevOps team, it’s nice to know you’ve got an extra DevOps team paying attention without the cost typically associated with it.</p><h4 id="""">A word from the client</h4><blockquote id="""">Release has enabled us to move quickly as a startup and deliver higher quality and better solutions to our customers. <em id="""">We have an environment platform that would have taken us years to build, but instead we’ve been able to focus on our application. We’ve been able to stay lean with our budget, but we haven’t had to sacrifice capabilities. We can add new services and test them immediately. They’ve been a fantastic partner and we couldn’t have scaled to meet our rapid growth without them.</em></blockquote><h6 id="""">Ivan Lee</h6><h6 id="""">CEO • Datasaur</h6><div data-rt-embed-type='true'><div class=""hide"">
  <div class=""case_rich-text-author-wrapper"">
    <img src=""https://assets-global.website-files.com/603dd147c5b0a480611bd348/65e1e2903abc6243ce8efa37_Ivan%20Lee.png"" loading=""lazy"" alt=""Photo of Ivan Lee, CEO of Datasaur"" class=""case_rich-text-author-image"">
    <div class=""case_rich-text-author-block"">
      <div class=""heading-style-h6"">Ivan Lee</div>
      <div class=""heading-style-h6"">CEO • Datasaur</div>
    </div>
  </div>
</div>

<style>
.case_rich-text-author-wrapper {
    grid-column-gap: 0.9375rem;
    grid-row-gap: 0.9375rem;
    align-items: center;
    display: flex;
}

.case_rich-text-author-image {
    width: 2.5rem;
    margin-bottom: 0;
}


</style></div>",https://uploads-ssl.webflow.com/603dd147c5b0a4221d1bd360/62f5451485a9212b719acad7_logo-datasur.svg,,,,,,,
DebtBook,debtbook,62aa5a70cd5ba27fe40d718b,65e0e4e0883773f4eca736cb,Thu Feb 29 2024 20:11:12 GMT+0000 (Coordinated Universal Time),Mon Mar 04 2024 16:53:45 GMT+0000 (Coordinated Universal Time),Mon Mar 04 2024 16:54:20 GMT+0000 (Coordinated Universal Time),https://uploads-ssl.webflow.com/603dd147c5b0a4221d1bd360/65e5f91ce7fe935f13b6fe7e_debtbook-thumbnail.svg,How DebtBook Ships 6x Faster with Release,,"<p id=""""><strong id="""">Shipping features and gathering feedback took DebtBook too long, making engineers context switch, instead of focusing on timely issues customers cared about. By implementing Release, DebtBook accelerated development velocity six times, shortened feedback loops, and brought customers closer to the product-building cycle, while improving the overall developer experience.</strong></p><p id="""">DebtBook tackles complex accounting and reporting challenges for public sector finance teams. They handle debt, lease, subscription management, and compliance reporting to ensure taxpayers’ funds are spent wisely and transparently. With just over 200 employees distributed throughout the United States, DebtBook serves more than 2,000 customers in government, higher education, and healthcare sectors.</p><h4 id="""">Slowed Down by Complexity</h4><p id="""">DebtBook’s customers operate in a highly regulated, constantly evolving environment that demands not just compliance but efficiency and transparency in managing taxpayer funds. This drives DebtBook to deliver a safe, secure, and robust set of tools with little room for error. To meet the complex and high standard, DebtBook implemented a rigorous software development process that inevitably became long and burdensome. </p><p id="""">Complex shared environments forced developers to move their individual code changes through multiple stages and multiple shared environments for validation and confidence building. The process was slow, frustrating, and prone to error, which caused re-work and additional toil. On average it took 40 days to release changes and new features, well over the desired timeline.</p><p id="""">The feedback also trickled slowly. Developers got relevant product and customer feedback weeks or months after they finished working on a specific feature. This made them context-switch to an old issue and lose momentum on current tasks.</p><p id=""""><strong id="""">“Our shared environments setup was too slow and cumbersome to accommodate timely feedback. We knew we could ease these frustrations, shorten the feedback loop and speed up our deployment process, with the right tools,”</strong> said Michael Gorsuch, Director of Infrastructure for DebtBook. </p><p id="""">DebtBook needed an ephemeral environments platform to remove the shared environments bottlenecks, shorten the feedback loops and improve developer experience.</p><h4 id="""">Find the Right Fit</h4><p id="""">DebtBook maintains leverage and delivers a differentiated product in the market, by remaining lean, and focusing their engineering efforts on the core product. Their infrastructure team helps engineering win, by delivering a set of capabilities for moving faster, more securely, and with less friction. So when deciding on ephemeral environments solutions, they quickly rejected the build option as it would take too long, cost too much, and would divert attention from more important tasks.</p><p id=""""><strong id="""">“On the infrastructure side, the more we have to build ourselves, the more it weighs us down. So you have to be careful about what you build vs. what you buy,”</strong> shared Gorsuch.</p><p id="""">The team evaluated potential partners with a goal of building a working prototype within a week, finding Release to be the most flexible, customizable, and extendable among the options.</p><p id=""""><strong id="""">“Release proof of concept worked end-to-end on the first day, giving us another boost of confidence in the product,”</strong> said Gorsuch.</p><h4 id="""">Accelerate Software Delivery with Release</h4><p id="""">Engineers quickly adopted Release and continue to provide positive feedback on improved focus and velocity. Within a month Release was incorporated into all major development workflows, speeding up processes and removing frustration.</p><p id=""""><strong id="""">“Onboarding with Release was a truly collaborative experience, allowing us to fine tune the product and improve our process, making both work together smoothly,”</strong> said Gorsuch.</p><p id="""">Commit-to-customer cycle that used to take well over a month is now completed in under a week. Now developers spin up a near-production environment in minutes, instantly share their work-in-progress with product and peers, get relevant feedback, and release features quicker than ever before. Velocity improved six times and is continuing to improve with ongoing refinement.</p><p id="""">An unexpected aspect of implementing Release was a culture shift that followed. Reducing friction and context-switching allowed engineers to focus more intentionally on the features they were building. So instead of perfecting the code early on they now drill in into the “why” behind each line and iterate on feedback early and often. This creates features that truly align with the needs of the customer and gives engineers the momentum to take the product to the next level.</p><p id=""""><strong id="""">“Release allows the right feedback to come early, so everyone s getting excited, they start to interact with the feature, they can t wait for it to get out there, to get it right for the customer. And then the team helps get the code right. That s how we work now.”</strong> said Gorsuch.</p><p id="""">Release became an integral part of the development workflow at DebtBook, accelerating new feature development, shortening feedback loops, and improving developers' experience. All while maintaining a lean infrastructure team and optimizing internal resources to focus on the core product.</p><h4 id="""">Faster, Leaner, and more Collaborative Releases</h4><p id="""">DebtBook, who delivers sophisticated digital products to internal and external customers in the cloud, is on a mission to improve operations in three key areas: Development Velocity, Developer Experience, and Lean Operations.</p><p id="""">Implementing Release helped them achieved the following outcomes:</p><p id=""""><strong id="""">Development Velocity -&gt; 6x improvement in development velocity.</strong> Went from shipping new features less than once a month to releasing new functionality multiple times a week, continuously improving to move faster.</p><p id=""""><strong id="""">Developer Experience -&gt; 100% adoption of ephemeral environments.</strong> Shifted feedback earlier in the process, allowing engineers to collaborate and share ideas freely, and get features in the hands of customers faster.</p><p id=""""><strong id="""">Lean operations -&gt; Focusing engineering efforts on the core product.</strong> Leveraging resources of a small infrastructure team to deliver key functionality that help the engineering team win.</p><p id=""""><strong id="""">“With Release we're getting a scalable and sustainable environments platform with a far better experience than we had before. It changes everything for us.”</strong> said the Director of Infrastructure</p><h4 id="""">Consistent Improvement</h4><p id="""">Implementing the Release ephemeral environments platform is just the beginning of the productive partnership between Release and DebtBook. As old roadblocks are removed, and the quality of collaboration increases, new opportunities for improvement come up, and Release is ready for it.</p><p id=""""><strong id="""">“Working with Release is like working with a trusted partner and an extension of our team. I know we’re in it together and will continue to build great products together.”</strong> summed up Gorsuch</p>",https://uploads-ssl.webflow.com/603dd147c5b0a4221d1bd360/65e5fc950552d529f02be7ef_Name%3DDebtBook%2C%20Autolayout%3DFalse.svg,,200+,Financial Services,"North Carolina, USA","<p id="""">6x improvement in development velocity</p>","<p id="""">100% adoption of ephemeral environments</p>",<p>Focusing engineering efforts on the core product</p>
Monad,monad,62aa5a70cd5ba27fe40d718b,62aa5a70cd5ba2b7900d72dd,Tue Mar 09 2021 22:27:29 GMT+0000 (Coordinated Universal Time),Thu Feb 29 2024 22:05:40 GMT+0000 (Coordinated Universal Time),Thu Feb 29 2024 22:08:15 GMT+0000 (Coordinated Universal Time),https://uploads-ssl.webflow.com/603dd147c5b0a4221d1bd360/62f547577ff2dd4fae085c90_thumbnail-m.png,B2B SaaS On-premise/VPC environments made easy - Monad case study,Monad is a security company that collects and aggregates data from the information security tools used by an enterprise and generates insights for a more holistic view of their security posture. ,"<h4 id="""">About the client</h4><p id="""">Monad is a security company that collects and aggregates data from the information security tools used by an enterprise and generates insights for a more holistic view of their security posture. They deliver their software as an “on-cloud” solution into their customers’ VPCs.&nbsp;</p><h4 id="""">Release Technologies used:<strong id="""">‍</strong><br></h4><ul id=""""><li id="""">Preview Environments with every Pull Request for User Acceptance Testing</li><li id="""">Permanent Staging Environments</li><li id="""">On-Demand Sales Demo Environments for reproducible and consistent sales demos across industry verticals.</li><li id="""">Instant Datasets for instantly loading appropriate data into sales and preview environments.</li><li id="""">On-cloud distribution for delivering Monad “on-cloud” into their customer VPCs.</li><li id="""">Production Environments for delivery of the Monad hosted SaaS solution</li></ul><h4 id="""">Problem<br></h4><p id="""">Monad came to Release early in their evolution as a startup before they had invested in building out a DevOps team. They initially approached Release for help getting their software distributed into one of their early customer’s cloud accounts running in AWS. They had a looming deadline and had yet to begin the work to design and implement a way to deliver their software into their customer’s cloud/VPC.</p><p id="""">With this looming deadline and a need to move quickly, Monad needed a solution that could easily define their application so it could be reproduced and delivered within a few weeks. Their application was a combination of open-source software, connections to datasets like Snowflake, and custom in-house software. The complexity of the application required more than just containerizing their solution and offering it as a docker image. There were many interdependent services and the architecture resembled a micro-services ecosystem.&nbsp;</p><p id="""">The challenge they faced was ‘How are we going to take this architecture and deliver it into our customer’s cloud, while also having the ability to upgrade and monitor the software over time?’</p><p id="""">With only a few weeks to implement and a team that was overworked without deep DevOps skills, they approached Release as they knew we had a system that could easily reproduce environments and deploy into AWS.</p><h4 id="""">How this would have been solved before<br></h4><p id="""">In some cases, when the application is just one service, a company could build a container and allow their customers to deploy the container on their own. In other situations where the application was more complex with many services, a company would have no other option than to build out a custom solution built internally. Usually this would involve a DevOps engineer (or many) to write custom scripts that would essentially define a rigid definition of their application, a mechanism to connect to their customer’s AWS account with appropriate permissions and some sort of ability to upgrade the software in a controlled way when new releases were available.&nbsp;</p><p id="""">The upgrade mechanism is especially difficult as it needs to allow for the customer to test the upgrade and deploy when they are comfortable doing so. Monitoring is also a tricky problem to solve as the solution would need some way to send alerts and events out of the customer’s VPC for monitoring and analysis.</p><p id="""">In the end, all of this is custom and difficult to implement and could easily take a team of highly skilled DevOps engineers many months or years to implement. This is also not a core product value offering and conflicts with resources that could be devoted to security product features.</p><h4 id="""">A new solution<br></h4><p id="""">Because Release uses a standard application definition, Monad was able to define their multi-service application in a Release Application Template. Additionally, since Release is designed to deploy into a Kubernetes cluster running within a customer’s AWS account, Monad was able to leverage this capability to easily deploy their solution into their customer’s AWS account and gain the benefits of Kubernetes for their application. Release provided Monad with a custom landing page which allowed their customers to connect their AWS account with Monad for a seamless installation process.&nbsp;</p><p id="""">The ability to add monitoring within the Kubernetes cluster with sidecar containers is built into the Release solution. Release provided core infrastructure monitoring while Monad was able to install their own agent to monitor application level logs and events.</p><p id="""">Lastly, because Release easily allows for creation of new environments, when a new version of Monad was available to their customers, a preview version of the upgrade could be distributed into a “staging” environment within their customers AWS account for testing and preview. When the customer was ready to upgrade, they simply approved the upgrade and the new environment became primary and the old version was automatically deprecated.</p><p id="""">One of the other benefits of Release that Monad is leveraging is using Release for their own internal development. Because their development/pre-production ecosystem and their customer deployment solution is on the same platform, Monad is able to quickly iterate, test, and deploy ephemeral environments. This gives them the ability to deliver quickly without worrying about managing their pre-production environment and infrastructure. Monad uses the same tool to deliver seamlessly all the way from development to testing to user acceptance testing to production.</p><h4 id="""">What’s next<br></h4><p id="""">Monad will be using Release to deploy and manage their own production environment for hosted customers. This will bring their entire pre-production, production, and SaaS on-cloud environment ecosystem completely under one roof. This greatly simplifies their entire product development lifecycle as all environments from dev to prod to on-cloud delivery is identical.&nbsp;</p><h4 id="""">A word from the client</h4><blockquote id="""">Building out a team to manage infrastructure is a huge expense and would have taken us many months to build an on-premise/on-cloud delivery platform. We would have been on the hook to maintain it and improve it and that would have been at the expense of building our core product. Release has enabled us to focus on building our product without worrying about how we’re going to develop, deploy, and deliver it to our customers. It’s fantastic.</blockquote><h6 id="""">Jacolon Walker</h6><h6 id="""">CTO • Monad</h6>",https://uploads-ssl.webflow.com/603dd147c5b0a4221d1bd360/60885a551d9b16278451c1ed_Monad.svg,,,,,,,
Mosaic,mosaic,62aa5a70cd5ba27fe40d718b,62c5a2d00152c7ca8b5efbea,Wed Jul 06 2022 14:57:20 GMT+0000 (Coordinated Universal Time),Fri Mar 01 2024 13:50:40 GMT+0000 (Coordinated Universal Time),Fri Mar 01 2024 13:52:39 GMT+0000 (Coordinated Universal Time),https://uploads-ssl.webflow.com/603dd147c5b0a4221d1bd360/62f547069abfb34a71750ea5_thumbnail-mosaic.png,Building the Right Solution for Residential Developers for Mosaic,Mosaic.us is a technology-powered general contractor.,"<p id="""">Mosaic.us is a technology-powered general contractor. They work with residential real estate developers and homebuilders to construct homes after initial design and planning work is complete. Mosaic’s internal tech platform increases communication and collaboration between the dozens of teams that have to work together to complete construction projects. </p><h4 id="""">Release Technologies Used</h4><ul id=""""><li id="""">Instant Datasets for instantly loading appropriate data into sales and preview environments.</li></ul><h4 id="""">Challenge </h4><p id="""">Homebuilding is among the most complex businesses out there. Between design, permitting and construction any number of things can go wrong, leading to costly delays. There are often 40 to 50 different crews of subcontractors to manage in every home construction project, and supply scarcity is always a challenge.</p><p id="""">Much of this work has historically been done with pen and paper, or by spreadsheet at best.</p><p id="""">Mosaic uses technology to digitize every aspect of the homebuilding process. That means dozens of solutions covering disparate workflows, including data reports about timing and budgets, onboarding for subcontractors, bidding management and day-to-day site operations.</p><p id="""">Mosaic has an engineering team of roughly 15, split across three product teams. In creating a wide-ranging platform, they ran into a common problem that comes with quickly iterating on new products. As the team grew, and as they built out the service, they ran into a ceiling of what they could do. </p><p id="""">With just a few environments, and a significant time component for creating new ones, the logistics of testing new features proved challenging. That put a ceiling on how quickly Mosaic could round out its platform to capture every piece of the exhaustive process that is homebuilding. </p><h4 id="""">What they were doing before</h4><p id="""">For a long time, Mosaic used Terraform on top of Heroku for creating environments (prior to migrating to AWS), without any kind of CI/CD pipeline. That was fine for a while when the engineering team was small, but over time, as the team grew and the complexity compounded, bottlenecks emerged. Limits on the number of apps that could be integrated with Heroku – they had over 150 integrated because of the sheer volume of different pull requests – held them back. </p><p id="""">Heroku was not particularly reliable. Frequent memory errors and difficulty connecting to the API shut down the ability to continue working on new and updated features.</p><p id="""">Extensive downtime meant teams of high-priced engineers sometimes spent several hours in a day just waiting to be able to work in their environments. With these wait times, a few hours here and a few hours there, engineer downtime quickly added up to weeks of delay for updates and new products. </p><p id="""">Because there were limits on the number of apps, when developers wanted to create a new environment, they had to take inventory of their environments. And sometimes that meant deleting old environments to make room for new ones. </p><p id="""">Spinning up new environments was doable, but their solutions didn’t preload the necessary data for accurate testing environments. Because of this, each new environment took about half an hour to create; collectively DevOps teams spent days just creating new environments. </p><h4 id="""">A New Solution</h4><p id="""">Mosaic initially considered building an in-house solution, which would have required a significant time investment from their most highly skilled technical teams. Instead, they turned to Release’s Instant Datasets, which allowed Mosaic to pre-populate environments with the data needed for a full picture of how the software would perform. This was important for Mosaic, as executives, sales teams and others frequently wanted new environments to show individual features and updates to customers, or to play with a new idea. </p><p id="""">The previous setup of manually creating and populating made these quick environments a painstaking endeavor. With Release, Mosaic can now spin up or shut down new environments with just a couple clicks. </p><p id="""">Mosaic quickly switched over to Release, digging deep into their code in GitHub and setting up containers. This integration could have taken weeks, but with Release, Mosaic was able to quickly increase speed and reliability of their environments. </p><h4 id="""">What’s Next</h4><p id="""">Mosaic is looking into Release’s Docker Compose feature, as it continues to improve upon its environments. This allows Mosaic to run their environments locally before shipping them to GitHub. </p><p id="""">And going forward Mosaic will continue to integrate Docker tech into their operations. This is key to becoming more cloud independent and utilize a variety of different services to satisfy their needs.</p><h4 id="""">A word from the client</h4><blockquote id="""">The Release platform has been great for our developers. It's more stable and much faster than our previous solution. No longer are they losing hours of productivity at a time due to frequent issues of downtime.</blockquote><h6 id="""">Rodrigo Reis </h6><h6 id="""">Director Of Engineering &nbsp;• &nbsp;Mosaic</h6>",https://uploads-ssl.webflow.com/603dd147c5b0a4221d1bd360/62f544f13ef14971bebd95b0_logo-mosaic.svg,,,,,,,
Noteable,noteable,62aa5a70cd5ba27fe40d718b,62f3b7f94f632f0fb5a59ae0,Wed Aug 10 2022 13:51:53 GMT+0000 (Coordinated Universal Time),Thu Feb 29 2024 22:11:13 GMT+0000 (Coordinated Universal Time),Thu Feb 29 2024 22:13:29 GMT+0000 (Coordinated Universal Time),https://uploads-ssl.webflow.com/603dd147c5b0a4221d1bd360/62f54ca4eb37c7a55f0b4b88_thumbnail-noteable.png,"With Release, Noteable Increases Collaboration and Velocity While Cutting Downtime by 50%","Noteable is a collaborative notebook platform that enables teams to use and visualize data, together.","<h4 id="""">About the client</h4><p id="""">Noteable is a collaborative notebook platform that enables teams to use and visualize data, together. Its cloud-based and secure deployment options, no-code visualizations, and collaborative environment make it easy for teams to work with data in a single platform. Users can comment on, export, and share data points through a modern UI with native SQL support. Historically, different teams had different skill sets and used specialized tools that weren’t tightly integrated with one another. Too many handoffs led to unverifiable or unreproducible work, and the workflow process became prone to failure. Now, with Noteable, teams remain fully integrated in existing programming environments, while creating rich visualizations to share. All without code.</p><h4 id="""">Technologies used</h4><ul id=""""><li id="""">Preview environments to empower non-traditional users to work with data in new ways.</li></ul><h4 id="""">Problem</h4><p id="""">Noteable is focused on improving collaboration and data visualization techniques by adding features to virtual notebook environments such as versioning, commenting, real-time updates and role-based access control. Advanced visualization capabilities enable Noteable’s customers to automatically visualize their data in sophisticated new ways, and to explore their data before writing any code.</p><p id="""">This is crucial, as IDC found that <a href=""https://www.alteryx.com/resources/report/idc-state-of-data-science-and-analytics"" id="""">data experts worldwide spend 44 percent of their workdays on unsuccessful data activities</a>. A staggering<a href=""https://venturebeat.com/2021/11/16/noteable-expands-analytics-tools-for-programming-with-new-21m/"" id=""""> 90 percent</a> of time is spent searching for, preparing, and analyzing data – essential housekeeping tasks, which ultimately don’t add any meaningful value at all. </p><p id="""">So Noteable developed a suite of integrated collaboration tools to simplify communication and encourage exploration across teams, including commenting, version control and auto save. Additional features – including managed cloud infrastructure, integrated single sign-on, and role-based access control – act as a secure foundation.</p><p id="""">Designing and augmenting these types of rich feature sets, however, required Noteable developers to rapidly test their own code changes. Pull requests were taking too long, and they needed to streamline their entire code review and developer collaboration processes. &nbsp;Noteable needed faster feedback loops, and environments where they could quickly preview their code changes. Ephemeral environments through Release fit their requirements perfectly.</p><h4 id="""">How was this solved before</h4><p id="""">Diego Rodriguez, staff devOps engineer tech lead at Noteable, had tried building custom environments during his time at prior companies. He knew the DIY approach relied heavily on pull requests and interconnected tools to browse and manage code. This required a lot of cobbled together infrastructure, as well as writing customized scripts. It resulted in a situation where different teams were working on different aspects of the platform simultaneously. Developers made changes in isolated environments and couldn’t easily determine the full impact of code changes until everything was merged together. And with many code changes in flight at the same time, it became increasingly difficult to identify and fix errors.</p><p id="""">In his words: “At Noteable, we didn't have anything before Release - but because of my previous experience, we set forth to look for a vendor and not build something by ourselves.” </p><h4 id="""">A new solution</h4><p id="""">By turning to Release, the developers at Noteable now review their full stack and all the supporting infrastructure at the click of a button. Noteable also has immediate access to on-demand ephemeral environments, where they can spin up and delete environments on the fly, easily preview all code changes and run end-to-end tests in a fully fleshed out environment – before they get merged into the main branch on the source code repository.</p><p id="""">‍<br>The resulting impact Noteable has experienced is significant. Noteable estimates the time saved with Release compared to building custom environments is at least a full quarter worth of development work across two devops engineers, not accounting for the operational burden of maintaining a custom solution. With Release, they’re able to push a change to GitHub and instantly visualize the code change, which accelerates development and product releases. Additionally, running end-to-end tests in a fully fleshed out environment allows faster iteration, and collaboration is greatly improved as developers can access environments from a central, shared location. Finally, developers at Noteable don’t need to worry about maintaining any tooling or added infrastructure.</p><h4 id="""">What’s next</h4><p id="""">Noteable currently uses Release ephemeral environments with the frontend stack, and they &nbsp;plan to also deploy ephemeral environments for the backend stack. Doing so will alleviate local development complexities due to the varied supporting infrastructure systems that are in use and give the backend team more time to focus on development. </p><h4 id="""">A word from the client</h4><blockquote id="""">All pull requests require review, which became a substantial time investment and ultimately a blocking step for us. During code review, even the best developers may not understand what they’re looking at initially. Having ephemeral environments to bring up on-demand, and play with while looking at the code – rather than having to stop work, pull everything down, integrate new code changes into the main project repository, and fire it up again – reduces our time by 50 percent.</blockquote><h6 id="""">Krishna Rajendran</h6>",https://uploads-ssl.webflow.com/603dd147c5b0a4221d1bd360/62f6bc9a7b9d8d8393d2fc13_logo-noteable.svg,0,,,,,,
Simon,simon,62aa5a70cd5ba27fe40d718b,62aa5a70cd5ba290560d72dc,Tue Mar 09 2021 22:27:30 GMT+0000 (Coordinated Universal Time),Thu Feb 29 2024 22:10:38 GMT+0000 (Coordinated Universal Time),Thu Feb 29 2024 22:13:29 GMT+0000 (Coordinated Universal Time),https://uploads-ssl.webflow.com/603dd147c5b0a4221d1bd360/62f54733d0e2006d47587b1f_thumbnail-simon.png,Pre-production ephemeral environments and sales demo environments with Simon Data,"Simon Data is the enterprise customer data platform that empowers brands to deliver data-driven, personalized customer experiences everywhere.","<h4 id="""">About the client<br></h4><p id="""">Simon Data is the enterprise customer data platform that empowers brands to deliver data-driven, personalized customer experiences everywhere. Simon is a marketing platform with a diverse technology ecosystem that spans many technologies within AWS.<br></p><h4 id="""">Release Technologies used:<br></h4><ul id=""""><li id="""">Preview Environments with every Pull Request for User Acceptance Testing</li><li id="""">On-Demand Sales Demo Environments for reproducible and consistent sales demos across industry verticals.</li><li id="""">Instant Datasets for instantly loading appropriate data into sales and preview environments.<br></li></ul><h4 id="""">Problem<br></h4><p id="""">Simon Data was an early partner of Release with a handful of unique problems that needed to be solved in the environment ecosystem. First, Simon needed a better way to create environments for code reviews and product acceptance tests for their frontend web development team. In addition, Simon’s product is tricky to demo because each customer has specific data needs that required a special setup in a standalone environment such that the appropriate data could be loaded into the environment for the appropriate industry vertical (healthcare, automotive, etc…).&nbsp;<br></p><p id="""">Product acceptance testing and code reviews were done in one of two ways prior to Release. Simon started by adopting the ‘test in production’ philosophy by releasing changes behind feature flags. They had a shared staging environment as well, but it was never kept up to date and maintained, so it consistently fell behind and wasn’t used frequently. As the Simon team grew and product and design teams became a part of the development process for their B2B product, ‘test in production’ became less desirable. Features that weren’t ready for customers and tested comprehensively were being released, which caused a lot of frustration and rework.<br></p><p id="""">Sales demos were also a problem for Simon as there was only a single demo environment that had to be reloaded for each demo with the appropriate data for the specific industry of the target customer. This process was error prone and tedious to manage.<br></p><p id="""">Simon’s technology ecosystem was incredibly diverse across many of the technologies with AWS and their DevOps team managing a ton of complexity. Building out a better way to manage environments was a project they wanted to do but they were spending most of their time keeping up with the demands of the organization and couldn’t spare the cycles to fix their environment ecosystem.<br></p><h4 id="""">How was this solved before<br></h4><p id="""">Prior to Release, Simon had an in-house team build a staging environment where code reviews and product acceptance testing could be performed. but they only had one available to the growing development team. This staging environment was manually created and maintained which meant it regularly fell behind the most up-to-date technologies being used in their production environment.&nbsp;<br></p><p id="""">There was only one sales demo environment which also suffered from lagging behind the most current features and technologies. In addition, this environment had to be refreshed for each customer with the appropriate data. A single employee in sales operations was capable of loading the appropriate data and the process was manual.<br></p><p id="""">In the past, the typical solution to building out a pre-product environment ecosystem for a company like Simon Data would be to simply try and re-create the production environment manually. You’d end up with another shared environment that all the developers used but you’d quickly realize that it, being a shared resource, became a bottleneck. Now they would face having two bottlenecks that had to be maintained.<br></p><p id="""">Other solutions would be to spend 6-12 months building out a more automated environment ecosystem in house with a dedicated DevOps team. However, this is a large investment and requires continual maintenance on a system that doesn’t add direct value to the business. Ongoing monitoring, maintenance, and support for new features would be a recurring cost for this in-house solution.<br></p><h4 id="""">A new solution<br></h4><p id="""">Simon Data needed a better solution that could solve all their pre-production environment problems in a fast, cost effective, and streamlined manner. Because Release supports complex, multi-service applications within AWS we were able to replicate their complex environments. In addition, Simon Data is a data business, so environments needed the appropriate data to accurately test features and demonstrate value in their demo environments.<br></p><p id="""">We were able to provide Simon Data with an Environments as a Service solution. They used Release to create ephemeral staging environments for every Pull Request so code reviews and product acceptance testing could be done prior to releasing to production. This has resulted in higher quality solutions delivered to customers because Product Managers and stakeholders can see solutions much earlier in the development process than with testing in prod or shared staging environments. Simon has happier customers with better solutions and less “oops” moments or products that miss the mark.<br></p><p id="""">They are also creating on-demand Sales Demo environments with Release Instant Datasets. With Instant Datasets, Simon automatically loads industry specific data into demo environments to provide high quality and relevant demos for their potential customers. For each demo, they can choose the type of data they’d like to share with the customer and click a button to create a demo environment with relevant data for the demo. Over time they will be able to adapt their demos to any industry with a workflow for the sales teams which can easily add relevant data to the Instant Dataset library. This has resulted in much better and more relevant demos that have directly led to new Simon Data customers.<br></p><h4 id="""">What’s next<br></h4><p id="""">As Simon’s business is rapidly evolving so are their needs to streamline development and deployments. More and more services are being developed at Simon and their needs for quickly deploying services grows. In the future, Simon will leverage Release for production deployments of appropriate services that are best delivered via Kubernetes.&nbsp;&nbsp;<br></p><p id="""">We are also working towards expanding the types of data available in Release Instant Datasets to include services such as Redshift, a highly critical data element for Simon’s products and environments.<br></p><p id="""">The streamlining of deployments across a common environment management platform will reduce costs of operations and improve quality by reducing errors experienced by Simon’s customers.&nbsp;<br></p><p id="""">An additional area of focus we’re exploring are on-premise (on-cloud) deployments of our software into Simon’s customer accounts where security and privacy are crucial.<br></p><p id="""">Lastly, we’re also working towards helping Simon build out a joyful developer experience that makes developing against a complex technology ecosystem simple and easy for Simon’s many developers.&nbsp;<br></p><h4 id="""">A word from the client<br></h4><blockquote id="""">Release has been a fantastic partner that’s solved problems for our developers, product managers and sales operations teams that we just simply didn’t have the time or money to address. We’ve been able to focus on our core, value added code while Release has helped us deliver higher quality software, faster, even with our unique and complex technology ecosystem.<br></blockquote><h6 id="""">Jason Davis</h6><h6 id="""">CEO • Simon Data</h6>",https://uploads-ssl.webflow.com/603dd147c5b0a4221d1bd360/60885a4adcdd156211163d8e_simon.svg,,,,,,,
